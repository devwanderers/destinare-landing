{"version":3,"sources":["services/promises.js","container/Auth/LoginContainer.js","container/Auth/SignUpContainer.js","views/AuthView/index.js","views/AuthView/Forms/Login.js","constants/countrys.js","constants/language.js","views/AuthView/Forms/SignUp.js","services/yupValidations.js","components/CreateAntField/index.js"],"names":["timeout","ms","Promise","resolve","setTimeout","sleep","fn","a","delay","connect","state","dispatch","signIn","userData","actionsAuth","sendMail","mail","restProps","useState","showError","setShowError","errorMessage","setErrorMessage","handleSetError","Login","onSubmit","emailOrUsername","password","setSubmitting","email","then","resSignIn","error","payload","message","user","mailSent","signUp","rest","SignUp","confirmPassword","restValues","resSignUp","console","log","AuthView","FormAuth","auth","LoginContainer","SignUpContainer","history","useHistory","className","style","flex","sm","href","onClick","e","preventDefault","push","HomePath","width","height","schema","Yup","validations","generic","initialValues","Fragment","validationSchema","isSubmitting","values","component","AntInput","name","type","placeholder","hasFeedback","value","AntInputPassword","iconRender","visible","showIcon","Item","block","htmlType","loading","paddingTop","paddingBottom","top","SignInPath","countrys","availableLangues","firstName","lastName","country","language","passwordConfirmation","userName","SigUp","AntSelect","showSearch","selectOptions","EyeTwoTone","EyeInvisibleOutlined","LoginInPath","SUPPORTED_FORMATS","regex","min","max","matches","required","oneOf","test","validator","isAlphanumeric","walletAddress","isEthereumAddress","lowercase","phone","isAlpha","replace","birthDate","city","line","postalCode","file","size","includes","min20Usd","_v","parseFloat","no0Usd","boolean","onlyNumber","isColor","s","Option","color","number","array","validateIsNotCurrentUser","currentUser","currentMembers","userMail","valid","index","length","FormItem","Form","Select","CreateAntField","AntComponent","field","form","label","defaultSelected","submitCount","props","touched","submitted","hasError","errors","submittedError","touchedError","help","validateStatus","onBlur","setFieldTouched","onChange","target","setFieldValue","map","DatePicker","Input","Password","TimePicker"],"mappings":"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AFlB,UAIK,0BACD,mBACItC,UAAU,4CACVI,KAAK,IACLC,QAAS,SAACC,GACNA,EAAEC,iBAEFT,EAAQU,KAAK+B,MANrB,kCAgBlBxE,GAAa,qBAAKiC,UAAU,qB,mJCjH7BwC,EAAW,CACpB,cACA,gBACA,UACA,UACA,iBACA,UACA,SACA,WACA,aACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,UACA,yBACA,WACA,gBACA,SACA,iCACA,oBACA,WACA,eACA,UACA,WACA,WACA,SACA,aACA,iBACA,2BACA,OACA,QACA,QACA,mBACA,0BACA,WACA,UACA,QACA,eACA,aACA,qBACA,UACA,SACA,iBACA,mCACA,UACA,WACA,WACA,qBACA,aACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,8BACA,gBACA,iCACA,OACA,UACA,SACA,gBACA,mBACA,8BACA,QACA,SACA,UACA,UACA,QACA,YACA,qBACA,SACA,YACA,UACA,aACA,OACA,YACA,SACA,gBACA,SACA,QACA,oCACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,UACA,SACA,QACA,cACA,UACA,QACA,SACA,aACA,QACA,WACA,gBACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,aACA,YACA,UACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,cACA,uBACA,gBACA,cACA,YACA,QACA,UACA,OACA,iBACA,2BACA,SACA,OACA,WACA,QACA,wBACA,SACA,mBACA,WACA,OACA,cACA,WACA,SACA,WACA,cACA,QACA,UACA,UACA,qBACA,SACA,qCACA,mBACA,eACA,wBACA,cACA,4BACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,eACA,WACA,WACA,kBACA,UACA,eACA,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","file":"static/js/8.1519d41f.chunk.js","sourcesContent":["const returnPromise = (callback) => {\r\n    return new Promise((resolve, reject) => callback(resolve, reject))\r\n}\r\n\r\nconst timeout = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nconst sleep = async (fn, delay = 300) => {\r\n    await timeout(delay)\r\n    return fn()\r\n}\r\n\r\nexport { returnPromise, timeout, sleep }\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { sleep } from '../../services/promises'\r\nimport * as actionsAuth from '../../store/reducers/auth/actions'\r\nimport Login from '../../views/AuthView/Forms/Login'\r\n// import { tripvixiaURL } from './../../constants/s\r\n\r\nconst LoginContainer = ({ signIn, sendMail, ...restProps }) => {\r\n    const [showError, setShowError] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const handleSetError = (errorMessage) => {\r\n        setShowError(true)\r\n        setErrorMessage(errorMessage)\r\n    }\r\n    const handleSubmitForm = (\r\n        { emailOrUsername, password },\r\n        { setSubmitting }\r\n    ) => {\r\n        setShowError(false)\r\n        signIn({ email: emailOrUsername, password }).then((resSignIn) => {\r\n            if (resSignIn?.error) {\r\n                if (resSignIn.payload?.message === 'InvalidCredentials') {\r\n                    handleSetError(\r\n                        'There was a problem logging in. Please check your email and password'\r\n                    )\r\n                } else if (resSignIn.payload?.message) {\r\n                    handleSetError(resSignIn.payload?.message)\r\n                } else {\r\n                    handleSetError('Internar server error')\r\n                }\r\n                sleep(() => {\r\n                    setSubmitting(false)\r\n                })\r\n            } else {\r\n                const { user } = resSignIn.payload\r\n                if (!user?.mailSent) {\r\n                    sendMail(emailOrUsername)\r\n                }\r\n            }\r\n            // else {\r\n            //     windowOpen(tripvixiaURL)\r\n            //     sleep(() => {\r\n            //         setSubmitting(false)\r\n            //     })\r\n            // }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Login\r\n            showError={showError}\r\n            errorMessage={errorMessage}\r\n            onSubmit={handleSubmitForm}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signIn: (userData) => dispatch(actionsAuth.signIn(userData)),\r\n    sendMail: (mail) => dispatch(actionsAuth.sendMail(mail)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { sleep } from '../../services/promises'\r\nimport SignUp from '../../views/AuthView/Forms/SignUp'\r\nimport { actionsAuth } from './../../store/reducers/auth/index'\r\n\r\nconst SignUpContainer = ({ signUp, signIn, sendMail, ...rest }) => {\r\n    const [showError, setShowError] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const handleSetError = (errorMessage) => {\r\n        setShowError(true)\r\n        setErrorMessage(errorMessage)\r\n    }\r\n\r\n    const handleSubmitForm = (\r\n        { confirmPassword, ...restValues },\r\n        { setSubmitting }\r\n    ) => {\r\n        setShowError(false)\r\n        signUp(restValues).then((resSignUp) => {\r\n            if (resSignUp?.error) {\r\n                handleSetError(resSignUp.payload?.message)\r\n                sleep(() => {\r\n                    setSubmitting(false)\r\n                })\r\n            } else {\r\n                const { email, password } = restValues\r\n                signIn({ email, password }).then((resSignIn) => {\r\n                    if (resSignIn?.error) {\r\n                        handleSetError(resSignIn.payload?.message)\r\n                    } else {\r\n                        const { user } = resSignIn.payload\r\n                        console.log({ user })\r\n                        if (!user?.mailSent) {\r\n                            sendMail(email)\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <SignUp\r\n            showError={showError}\r\n            errorMessage={errorMessage}\r\n            onSubmit={handleSubmitForm}\r\n            {...rest}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signUp: (userData) => dispatch(actionsAuth.signUp(userData)),\r\n    signIn: (userData) => dispatch(actionsAuth.signIn(userData)),\r\n    sendMail: (mail) => dispatch(actionsAuth.sendMail(mail)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpContainer)\r\n","import React from 'react'\r\nimport { Row, Col } from 'antd'\r\n\r\nimport { DestinareLogoColorSVG } from '../../assets/svg/brand/index'\r\n\r\nimport LoginContainer from './../../container/Auth/LoginContainer'\r\nimport SignUpContainer from './../../container/Auth/SignUpContainer'\r\nimport { useHistory } from 'react-router'\r\nimport { HomePath } from '../../constants/routerConstants'\r\n\r\nconst AuthView = ({ auth }) => {\r\n    const FormAuth = auth === 'login' ? LoginContainer : SignUpContainer\r\n    const history = useHistory()\r\n    return (\r\n        <section className=\"login-content\">\r\n            <div className=\"absolute left-0 bottom-0 top-0 right-0 md:right-2/4 bg-womanBeach bg-cover bg-center md:bg-right md:flex hidden\"></div>\r\n            <div className=\"max-w-1280px px-6 relative lg:wrapper mx-auto lg:pl-4 lg:pr-4\">\r\n                <Row className=\"justify-center \" style={{ flex: '1' }}>\r\n                    <Col sm={12} className=\" flex justify-center \">\r\n                        {/* <div className=\"col-inner\">\r\n                            {auth === 'login' ? (\r\n                                <h2 className=\"\">\r\n                                    Regístrate para apoyar a tus creadores\r\n                                    favoritos\r\n                                </h2>\r\n                            ) : (\r\n                                <h2 className=\"\">\r\n                                    Regístrate para apoyar a tus creadores\r\n                                    favoritos 2\r\n                                </h2>\r\n                            )}\r\n                        </div> */}\r\n                    </Col>\r\n                    <Col sm={12} className=\"flex  justify-center\">\r\n                        <div className=\"col-inner\">\r\n                            <h1 className=\"mb-2 flex justify-center \">\r\n                                <a\r\n                                    href=\"#\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault()\r\n                                        history.push(HomePath)\r\n                                    }}\r\n                                >\r\n                                    <DestinareLogoColorSVG\r\n                                        width={245}\r\n                                        height={64}\r\n                                    />\r\n                                </a>\r\n                            </h1>\r\n                            <FormAuth />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nAuthView.propTypes = {}\r\n\r\nexport default AuthView\r\n","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { Button, Form as FormAnt, Alert } from 'antd'\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons'\r\nimport * as Yup from 'yup'\r\nimport { useHistory } from 'react-router'\r\nimport { validations } from './../../../services/yupValidations'\r\nimport {\r\n    AntInput,\r\n    AntInputPassword,\r\n} from './../../../components/CreateAntField/index'\r\nimport { SignInPath } from '../../../constants/routerConstants'\r\n\r\nconst schema = Yup.object({\r\n    emailOrUsername: validations.generic,\r\n    password: validations.generic,\r\n})\r\n\r\nconst initialValues = {\r\n    emailOrUsername: '',\r\n    password: '',\r\n}\r\n\r\nconst Login = ({ onSubmit, showError, errorMessage }) => {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"font-medium mb-2\">Log in</div>\r\n            <Formik\r\n                validationSchema={schema}\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {({ isSubmitting, values }) => (\r\n                    <Form className=\"mb-4\">\r\n                        <Field\r\n                            component={AntInput}\r\n                            name=\"emailOrUsername\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            className=\"h-12 rounded-lg\"\r\n                            hasFeedback\r\n                            value={values?.emailOrUsername}\r\n                        />\r\n                        <Field\r\n                            component={AntInputPassword}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            className=\"h-12 rounded-lg\"\r\n                            hasFeedback\r\n                            iconRender={(visible) =>\r\n                                visible ? (\r\n                                    <EyeTwoTone />\r\n                                ) : (\r\n                                    <EyeInvisibleOutlined />\r\n                                )\r\n                            }\r\n                            value={values?.password}\r\n                        />\r\n                        {showError && (\r\n                            <Alert\r\n                                className=\"mb-5\"\r\n                                message={errorMessage}\r\n                                type=\"error\"\r\n                                showIcon\r\n                            />\r\n                        )}\r\n                        <FormAnt.Item className=\"mb-0\">\r\n                            <Button\r\n                                block\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"text-sm px-4 py-2 py h-12 rounded-full font-medium\"\r\n                                // disabled={isSubmitting}\r\n                                loading={isSubmitting}\r\n                                style={{\r\n                                    paddingTop: '9px',\r\n                                    paddingBottom: '9px',\r\n                                }}\r\n                            >\r\n                                LOGIN\r\n                            </Button>\r\n                        </FormAnt.Item>\r\n                        <div className=\"login-links flex flex-col text-center\">\r\n                            <a\r\n                                type=\"link\"\r\n                                className=\"text-sm h-auto py-0 text-black-1 hover:text-info\"\r\n                            >\r\n                                Forgot password?\r\n                            </a>\r\n                            <span\r\n                                className=\"text-black-1 text-sm h-auto py-0 relative\"\r\n                                style={{ top: '-7px' }}\r\n                            >\r\n                                {\"Don't have an account? \"}\r\n                                <a\r\n                                    className=\"font-medium text-blue-900 hover:text-info\"\r\n                                    href=\"#\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault()\r\n\r\n                                        history.push(SignInPath)\r\n                                    }}\r\n                                >\r\n                                    Sign up\r\n                                </a>\r\n                            </span>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            {!showError && <div className=\"h-40px mb-5\"></div>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {}\r\n\r\nexport default Login\r\n","export const countrys = [\r\n    'Afghanistan',\r\n    'Aland Islands',\r\n    'Albania',\r\n    'Algeria',\r\n    'American Samoa',\r\n    'Andorra',\r\n    'Angola',\r\n    'Anguilla',\r\n    'Antarctica',\r\n    'Antigua and Barbuda',\r\n    'Argentina',\r\n    'Armenia',\r\n    'Aruba',\r\n    'Australia',\r\n    'Austria',\r\n    'Azerbaijan',\r\n    'Bahamas',\r\n    'Bahrain',\r\n    'Bangladesh',\r\n    'Barbados',\r\n    'Belarus',\r\n    'Belgium',\r\n    'Belize',\r\n    'Benin',\r\n    'Bermuda',\r\n    'Bhutan',\r\n    'Bolivia',\r\n    'Bonaire',\r\n    'Bosnia and Herzegovina',\r\n    'Botswana',\r\n    'Bouvet Island',\r\n    'Brazil',\r\n    'British Indian Ocean Territory',\r\n    'Brunei Darussalam',\r\n    'Bulgaria',\r\n    'Burkina Faso',\r\n    'Burundi',\r\n    'Cambodia',\r\n    'Cameroon',\r\n    'Canada',\r\n    'Cape Verde',\r\n    'Cayman Islands',\r\n    'Central African Republic',\r\n    'Chad',\r\n    'Chile',\r\n    'China',\r\n    'Christmas Island',\r\n    'Cocos (Keeling) Islands',\r\n    'Colombia',\r\n    'Comoros',\r\n    'Congo',\r\n    'Cook Islands',\r\n    'Costa Rica',\r\n    'Croatia (Hrvatska)',\r\n    'Curacao',\r\n    'Cyprus',\r\n    'Czech Republic',\r\n    'Democratic Republic of the Congo',\r\n    'Denmark',\r\n    'Djibouti',\r\n    'Dominica',\r\n    'Dominican Republic',\r\n    'East Timor',\r\n    'Ecuador',\r\n    'Egypt',\r\n    'El Salvador',\r\n    'Equatorial Guinea',\r\n    'Eritrea',\r\n    'Estonia',\r\n    'Ethiopia',\r\n    'Falkland Islands (Malvinas)',\r\n    'Faroe Islands',\r\n    'Federated States of Micronesia',\r\n    'Fiji',\r\n    'Finland',\r\n    'France',\r\n    'French Guiana',\r\n    'French Polynesia',\r\n    'French Southern Territories',\r\n    'Gabon',\r\n    'Gambia',\r\n    'Georgia',\r\n    'Germany',\r\n    'Ghana',\r\n    'Gibraltar',\r\n    'Great Britain (UK)',\r\n    'Greece',\r\n    'Greenland',\r\n    'Grenada',\r\n    'Guadeloupe',\r\n    'Guam',\r\n    'Guatemala',\r\n    'Guinea',\r\n    'Guinea-Bissau',\r\n    'Guyana',\r\n    'Haiti',\r\n    'Heard Island and McDonald Islands',\r\n    'Honduras',\r\n    'Hong Kong',\r\n    'Hungary',\r\n    'Iceland',\r\n    'India',\r\n    'Indonesia',\r\n    'Iraq',\r\n    'Ireland',\r\n    'Israel',\r\n    'Italy',\r\n    'Ivory Coast',\r\n    'Jamaica',\r\n    'Japan',\r\n    'Jordan',\r\n    'Kazakhstan',\r\n    'Kenya',\r\n    'Kiribati',\r\n    'Korea (South)',\r\n    'Kuwait',\r\n    'Kyrgyzstan',\r\n    'Laos',\r\n    'Latvia',\r\n    'Lebanon',\r\n    'Lesotho',\r\n    'Liberia',\r\n    'Libya',\r\n    'Liechtenstein',\r\n    'Lithuania',\r\n    'Luxembourg',\r\n    'Macau',\r\n    'Macedonia',\r\n    'Madagascar',\r\n    'Malawi',\r\n    'Malaysia',\r\n    'Maldives',\r\n    'Mali',\r\n    'Malta',\r\n    'Marshall Islands',\r\n    'Martinique',\r\n    'Mauritania',\r\n    'Mauritius',\r\n    'Mayotte',\r\n    'Mexico',\r\n    'Moldova',\r\n    'Monaco',\r\n    'Mongolia',\r\n    'Montenegro',\r\n    'Montserrat',\r\n    'Morocco',\r\n    'Mozambique',\r\n    'Myanmar',\r\n    'Namibia',\r\n    'Nauru',\r\n    'Nepal',\r\n    'Netherlands',\r\n    'Netherlands Antilles',\r\n    'New Caledonia',\r\n    'New Zealand',\r\n    'Nicaragua',\r\n    'Niger',\r\n    'Nigeria',\r\n    'Niue',\r\n    'Norfolk Island',\r\n    'Northern Mariana Islands',\r\n    'Norway',\r\n    'Oman',\r\n    'Pakistan',\r\n    'Palau',\r\n    'Palestinian Territory',\r\n    'Panama',\r\n    'Papua New Guinea',\r\n    'Paraguay',\r\n    'Peru',\r\n    'Philippines',\r\n    'Pitcairn',\r\n    'Poland',\r\n    'Portugal',\r\n    'Puerto Rico',\r\n    'Qatar',\r\n    'Reunion',\r\n    'Romania',\r\n    'Russian Federation',\r\n    'Rwanda',\r\n    'S. Georgia and S. Sandwich Islands',\r\n    'Saint Barthelemy',\r\n    'Saint Helena',\r\n    'Saint Kitts and Nevis',\r\n    'Saint Lucia',\r\n    'Saint Pierre and Miquelon',\r\n    'Saint Vincent and the Grenadines',\r\n    'Samoa',\r\n    'San Marino',\r\n    'Sao Tome and Principe',\r\n    'Saudi Arabia',\r\n    'Senegal',\r\n    'Serbia',\r\n    'Seychelles',\r\n    'Sierra Leone',\r\n    'Singapore',\r\n    'Sint Maarten',\r\n    'Slovakia',\r\n    'Slovenia',\r\n    'Solomon Islands',\r\n    'Somalia',\r\n    'South Africa',\r\n    'Spain',\r\n    'Sri Lanka',\r\n    'Suriname',\r\n    'Svalbard and Jan Mayen',\r\n    'Swaziland',\r\n    'Sweden',\r\n    'Switzerland',\r\n    'Taiwan',\r\n    'Tajikistan',\r\n    'Tanzania',\r\n    'Thailand',\r\n    'Timor-Leste',\r\n    'Togo',\r\n    'Tokelau',\r\n    'Tonga',\r\n    'Trinidad and Tobago',\r\n    'Tunisia',\r\n    'Turkey',\r\n    'Turkmenistan',\r\n    'Turks and Caicos Islands',\r\n    'Tuvalu',\r\n    'Uganda',\r\n    'United Arab Emirates',\r\n    'United Kingdom',\r\n    'United States',\r\n    'United States Minor Outlying Islands',\r\n    'Uruguay',\r\n    'USSR (former)',\r\n    'Uzbekistan',\r\n    'Vanuatu',\r\n    'Vatican City State (Holy See)',\r\n    'Venezuela',\r\n    'Vietnam',\r\n    'Virgin Islands (British)',\r\n    'Virgin Islands (U.S.)',\r\n    'Wallis and Futuna',\r\n    'Western Sahara',\r\n    'Yemen',\r\n    'Yugoslavia (former)',\r\n    'Zaire (former)',\r\n    'Zambia',\r\n    'Zimbabwe',\r\n]\r\n","export const availableLangues = [\r\n    'English',\r\n    'Spanish',\r\n    'French',\r\n    'Portugu',\r\n    'Italian',\r\n    'Mandarin',\r\n]\r\n","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { Button, Form as FormAnt, Alert } from 'antd'\r\nimport * as Yup from 'yup'\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons'\r\nimport { validations } from '../../../services/yupValidations'\r\nimport { useHistory } from 'react-router'\r\n\r\nimport { LoginInPath } from '../../../constants/routerConstants'\r\nimport { countrys } from './../../../constants/countrys'\r\nimport { availableLangues } from './../../../constants/language'\r\nimport {\r\n    AntInput,\r\n    AntInputPassword,\r\n    AntSelect,\r\n} from '../../../components/CreateAntField/index'\r\n\r\nconst schema = Yup.object({\r\n    firstName: validations.name,\r\n    lastName: validations.name,\r\n    email: validations.mail,\r\n    country: validations.generic,\r\n    language: validations.generic,\r\n    // userName: validations.userName,\r\n    // walletAddress: validations.walletAddress,\r\n    password: validations.password,\r\n    confirmPassword: validations.passwordConfirmation,\r\n})\r\n\r\nconst initialValues = {\r\n    firstName: '',\r\n    lastName: '',\r\n    userName: '',\r\n    email: '',\r\n    // country: null,\r\n    password: '',\r\n    confirmPassword: '',\r\n}\r\n\r\nconst SigUp = ({ onSubmit, showError, errorMessage }) => {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"font-medium mb-2\">Sign up</div>\r\n            <Formik\r\n                validationSchema={schema}\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {({ values, isSubmitting }) => (\r\n                    <Form className=\"mb-4\">\r\n                        <div className=\"flex flex-row space-x-2\">\r\n                            <Field\r\n                                component={AntInput}\r\n                                type=\"text\"\r\n                                name=\"firstName\"\r\n                                placeholder=\"* First Name\"\r\n                                className=\"h-12 rounded-lg\"\r\n                                hasFeedback\r\n                                value={values?.firstName}\r\n                            />\r\n                            <Field\r\n                                component={AntInput}\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                placeholder=\"* Last Name\"\r\n                                className=\"h-12 rounded-lg\"\r\n                                hasFeedback\r\n                                value={values?.lastName}\r\n                            />\r\n                        </div>\r\n                        <Field\r\n                            component={AntInput}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            className=\"h-12 rounded-lg\"\r\n                            hasFeedback\r\n                            value={values?.email}\r\n                        />\r\n                        <Field\r\n                            component={AntSelect}\r\n                            name=\"country\"\r\n                            showSearch\r\n                            // type=\"email\"\r\n                            placeholder=\"Country of Residence\"\r\n                            className=\"h-12 rounded-lg custom-ant-select\"\r\n                            selectOptions={countrys}\r\n                            // hasFeedback\r\n                            value={values?.country}\r\n                        />\r\n                        <Field\r\n                            component={AntSelect}\r\n                            name=\"language\"\r\n                            showSearch\r\n                            // type=\"email\"\r\n                            placeholder=\"Preferred Language\"\r\n                            className=\"h-12 rounded-lg custom-ant-select\"\r\n                            selectOptions={availableLangues}\r\n                            // hasFeedback\r\n                            value={values?.language}\r\n                        />\r\n                        {/* <Field\r\n                            component={AntInput}\r\n                            type=\"text\"\r\n                            name=\"userName\"\r\n                            placeholder=\"Username\"\r\n                            className=\"h-12 rounded-lg\"\r\n                            hasFeedback\r\n                            value={values?.userName}\r\n                        />\r\n                        <Field\r\n                            component={AntInput}\r\n                            type=\"text\"\r\n                            name=\"walletAddress\"\r\n                            placeholder=\"Wallet Address\"\r\n                            className=\"h-12 rounded-lg\"\r\n                            hasFeedback\r\n                            value={values?.walletAddress}\r\n                        /> */}\r\n                        <Field\r\n                            component={AntInputPassword}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            className=\"h-12 rounded-lg\"\r\n                            hasFeedback\r\n                            iconRender={(visible) =>\r\n                                visible ? (\r\n                                    <EyeTwoTone />\r\n                                ) : (\r\n                                    <EyeInvisibleOutlined />\r\n                                )\r\n                            }\r\n                            value={values?.password}\r\n                        />\r\n                        <Field\r\n                            component={AntInputPassword}\r\n                            name=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            className=\"h-12 rounded-lg\"\r\n                            hasFeedback\r\n                            iconRender={(visible) =>\r\n                                visible ? (\r\n                                    <EyeTwoTone />\r\n                                ) : (\r\n                                    <EyeInvisibleOutlined />\r\n                                )\r\n                            }\r\n                            value={values?.confirmPassword}\r\n                        />\r\n                        {showError && (\r\n                            <Alert\r\n                                className=\"mb-5\"\r\n                                message={errorMessage}\r\n                                type=\"error\"\r\n                                showIcon\r\n                            />\r\n                        )}\r\n\r\n                        <FormAnt.Item className=\"mb-0\">\r\n                            <Button\r\n                                type=\"primary\"\r\n                                block\r\n                                className=\"text-sm px-4 py-2 py h-12 rounded-full font-medium\"\r\n                                htmlType=\"submit\"\r\n                                loading={isSubmitting}\r\n                                style={{\r\n                                    paddingTop: '9px',\r\n                                    paddingBottom: '9px',\r\n                                }}\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                        </FormAnt.Item>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n            <div className=\"login-links text-center\">\r\n                <span\r\n                    className=\"text-black-1 text-sm h-auto py-0 relative\"\r\n                    style={{ top: '-7px' }}\r\n                >\r\n                    Already have an account.\r\n                    <a\r\n                        className=\"font-medium text-blue-200 hover:text-info\"\r\n                        href=\"#\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault()\r\n\r\n                            history.push(LoginInPath)\r\n                        }}\r\n                    >\r\n                        {' '}\r\n                        Log in\r\n                    </a>\r\n                </span>\r\n            </div>\r\n            {!showError && <div className=\"h-40px mb-5\"></div>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nSigUp.propTypes = {}\r\n\r\nexport default SigUp\r\n","import * as Yup from 'yup'\r\nimport validator from 'validator'\r\n\r\nexport const SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\r\n\r\nconst FILE_SIZE = 100 * 1024\r\n\r\nexport const regex = {\r\n    alpha: /^[A-Za-z]+$/,\r\n    alphaNumeric: /[a-zA-Z0-9]/,\r\n    atLeastOneUpperCase: /[A-Z]/,\r\n    phoneNumber:\r\n        /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\r\n    exact5: /^[0-9]{5}$/,\r\n}\r\n\r\nexport const validations = {\r\n    password: Yup.string()\r\n        .min(8, 'Too Short!')\r\n        .max(64, 'Too Long!')\r\n        .matches(\r\n            regex.atLeastOneUpperCase,\r\n            'Must contain al least one uppercase letter.'\r\n        )\r\n        .required('Required'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n        .required('Required'),\r\n    userName: Yup.string()\r\n        .min(3, 'Too Short!')\r\n        .max(64, 'Too Long!')\r\n        .test(\r\n            'alphaNumeric',\r\n            'Must contain only letters and numbers.',\r\n            (value) => value && validator.isAlphanumeric(value)\r\n        )\r\n        .required('Required'),\r\n    walletAddress: Yup.string()\r\n        .min(3, 'Too Short!')\r\n        .max(64, 'Too Long!')\r\n        .test(\r\n            'alphaNumeric',\r\n            'Must be a valid wallet address.',\r\n            (value) => value && validator.isEthereumAddress(value)\r\n        )\r\n        .required('Required'),\r\n    mail: Yup.string()\r\n        .max(64, 'Too Long!')\r\n        .email('Must be a valid email format. example@email.com')\r\n        .lowercase('Must contain only lower case')\r\n        .required('Required'),\r\n    phone: Yup.string()\r\n        .matches(regex.phoneNumber, 'Must be a valid phone number.')\r\n        .required('Required'),\r\n    name: Yup.string()\r\n        .min(3, 'Too Short!')\r\n        .max(30, 'Too Long!')\r\n        .test(\r\n            'alpha',\r\n            'Must contain only letters.',\r\n            (value) =>\r\n                !value || (value && validator.isAlpha(value.replace(' ', '')))\r\n        ),\r\n    // .required('Required'),\r\n    birthDate: Yup.date().required('Required'),\r\n    country: Yup.string().required('Required'),\r\n    state: Yup.string().required('Required'),\r\n    city: Yup.string().required('Required'),\r\n    line: Yup.string().required('Required'),\r\n    postalCode: Yup.string()\r\n        .matches(regex.exact5, 'Must be exactly 5 digits')\r\n        .required('Required'),\r\n    file: Yup.mixed()\r\n        .required('A file is required')\r\n        .test(\r\n            'fileSize',\r\n            'File too large',\r\n            (value) => value && value[0].size <= FILE_SIZE\r\n        )\r\n        .test(\r\n            'fileFormat',\r\n            'Unsupported Format',\r\n            (value) => value && SUPPORTED_FORMATS.includes(value[0].type)\r\n        )\r\n        .required('Required'),\r\n    min20Usd: Yup.mixed()\r\n        .required('Required')\r\n        .test('usdAmount', 'Minimum to invest is 20 USD', (value) => {\r\n            if (value) {\r\n                let _v = value\r\n                _v = _v.replace(/\\D/g, '')\r\n                _v = parseFloat(_v)\r\n                return _v >= 20.0\r\n            }\r\n            return false\r\n        }),\r\n    no0Usd: Yup.mixed()\r\n        .required('Required')\r\n        .test('usdAmount', 'Usd amount must be higher than 0', (value) => {\r\n            if (value) {\r\n                let _v = value\r\n                _v = parseFloat(_v)\r\n                return _v > 0.0\r\n            }\r\n            return false\r\n        }),\r\n    generic: Yup.string().max(64, 'Too Long!').required('Required'),\r\n    boolean: Yup.bool().oneOf([true], 'Field must be checked'),\r\n    onlyNumber: Yup.mixed()\r\n        .required('Required')\r\n        .test('onlyNumber', 'Field must be a number', (value) => {\r\n            if (value) {\r\n                const _v = value\r\n                const isnum = /^\\d+$/.test(_v)\r\n\r\n                return isnum\r\n            }\r\n            return false\r\n        }),\r\n    isColor: Yup.mixed()\r\n        .required('Required')\r\n        .test(\r\n            'color',\r\n            'Field must be a valid color format. Examples. RGBA: rgba(0, 0, 0, 1), HEXA: #000000, RGB: rgb(0,0,0), Color: red',\r\n            (value) => {\r\n                if (value) {\r\n                    const s = new Option().style\r\n                    s.color = value\r\n                    return s.color !== ''\r\n                }\r\n                return false\r\n            }\r\n        ),\r\n    number: Yup.number().required('Required'),\r\n    array: Yup.array().required('Required'),\r\n    validateIsNotCurrentUser: (currentUser, currentMembers) => {\r\n        return Yup.mixed()\r\n            .required('Required')\r\n            .test('validUserName', 'You can not add yourself', (value) => {\r\n                if (value) {\r\n                    if (\r\n                        value === currentUser.userName ||\r\n                        value === currentUser.userMail\r\n                    )\r\n                        return false\r\n                    return true\r\n                }\r\n                return false\r\n            })\r\n            .test(\r\n                'validateIsNotExistingMember',\r\n                'You can not add existing members',\r\n                (value) => {\r\n                    if (value) {\r\n                        let valid = true\r\n\r\n                        for (\r\n                            let index = 0;\r\n                            index < currentMembers.length;\r\n                            index++\r\n                        ) {\r\n                            const { userName, userMail } = currentMembers[index]\r\n                            if (value === userName || value === userMail) {\r\n                                valid = false\r\n                                break\r\n                            }\r\n                        }\r\n                        return valid\r\n                    }\r\n                    return false\r\n                }\r\n            )\r\n    },\r\n}\r\n","/* eslint-disable react/display-name */\r\nimport React from 'react'\r\nimport { DatePicker, Form, Input, TimePicker, Select } from 'antd'\r\n\r\nconst FormItem = Form.Item\r\nconst { Option } = Select\r\n\r\nconst CreateAntField =\r\n    (AntComponent) =>\r\n    ({\r\n        field,\r\n        form,\r\n        hasFeedback,\r\n        label,\r\n        defaultSelected,\r\n        selectOptions,\r\n        submitCount,\r\n        type,\r\n        ...props\r\n    }) => {\r\n        const touched = form.touched[field.name]\r\n        const submitted = submitCount > 0\r\n        const hasError = form.errors[field.name]\r\n        const submittedError = hasError && submitted\r\n        const touchedError = hasError && touched\r\n        const onInputChange = ({ target: { value } }) =>\r\n            form.setFieldValue(field.name, value)\r\n        const onChange = (value) => form.setFieldValue(field.name, value)\r\n        const onBlur = () => form.setFieldTouched(field.name, true)\r\n\r\n        return (\r\n            <FormItem\r\n                label={label}\r\n                hasFeedback={\r\n                    (hasFeedback && submitted) || (hasFeedback && touched)\r\n                }\r\n                help={submittedError || touchedError ? hasError : false}\r\n                validateStatus={\r\n                    submittedError || touchedError ? 'error' : 'success'\r\n                }\r\n            >\r\n                <AntComponent\r\n                    {...field}\r\n                    {...props}\r\n                    onBlur={onBlur}\r\n                    onChange={type ? onInputChange : onChange}\r\n                >\r\n                    {selectOptions &&\r\n                        selectOptions.map((name) => (\r\n                            <Option key={name}>{name}</Option>\r\n                        ))}\r\n                </AntComponent>\r\n            </FormItem>\r\n        )\r\n    }\r\n\r\nexport const AntSelect = CreateAntField(Select)\r\nexport const AntDatePicker = CreateAntField(DatePicker)\r\nexport const AntInput = CreateAntField(Input)\r\nexport const AntInputPassword = CreateAntField(Input.Password)\r\nexport const AntTimePicker = CreateAntField(TimePicker)\r\n"],"sourceRoot":""}