{"version":3,"sources":["views lazy /^/.*$/ groupOptions: {} namespace object","store/reducers/globalTypes.js","store/reducers/globalActions.js","HOCS/withLayout.js","Router/routes.js","components/PageLoadings/PageLoading.js","Router/index.js","App/SessionManager.js","App/index.js","reportWebVitals.js","store/reducers/index.js","index.js","store/config/index.js","store/reducers/auth/selectors.js","store/reducers/auth/types.js","store/services/axiosConfig.js","store/reducers/auth/actions.js","constants/routerConstants.js","store/reducers/auth/authReducer.js","store/reducers/auth/index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","globalTypes","LOG_OUT","logout","createAction","withLayout","WrappedComponent","HOC","this","props","Component","displayName","connect","state","authenticated","authSelectors","userData","dispatch","routes","name","path","paths","route","Route","componentProps","exact","PageLoading","className","AppRouter","index","component","loadable","fallback","layout","SessionManager","expiredSession","lastLoggin","now","Date","_lastLoggin","getTime","lastLogginSelector","App","Fragment","Router","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","key","storage","whitelist","appReducer","combineReducers","auth","persistReducer","action","type","removeItem","undefined","store","middlewares","thunkMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducers","applyMiddleware","persistor","persistStore","configureStore","ReactDOM","render","StrictMode","loading","document","getElementById","authReducerSelector","createSelector","authReducer","authenticatedSelector","userDataSelector","USER_AUTH","SIGN_UP","SIGN_IN","SENDUSER_DATA","axiosInstance","axios","create","baseURL","interceptors","response","use","reject","error","status","signIn","createAsyncThunk","types","user","a","rejectWithValue","post","email","password","data","console","log","signUp","firstName","lastName","username","result","HomePath","LoginInPath","SignInPath","tripvixiaURL","createReducer","accessToken","verified","builder","addCase","fulfilled","payload","actionsAuth","actions"],"mappings":"4FAAA,IAAIA,EAAM,CACT,aAAc,CACb,GACA,EACA,EACA,EACA,EACA,GAED,cAAe,CACd,GACA,EACA,EACA,EACA,EACA,GAED,yBAA0B,CACzB,GACA,EACA,EACA,EACA,EACA,GAED,4BAA6B,CAC5B,GACA,EACA,EACA,EACA,EACA,GAED,0BAA2B,CAC1B,GACA,EACA,EACA,EACA,EACA,IAED,6BAA8B,CAC7B,GACA,EACA,EACA,EACA,EACA,IAED,mBAAoB,CACnB,GACA,EACA,EACA,EACA,EACA,GAED,sBAAuB,CACtB,GACA,EACA,EACA,EACA,EACA,GAED,cAAe,CACd,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,gBAAiB,CAChB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,qCAAsC,CACrC,GACA,EACA,EACA,EACA,EACA,GAED,sCAAuC,CACtC,GACA,EACA,EACA,EACA,EACA,GAED,2CAA4C,CAC3C,GACA,EACA,EACA,EACA,EACA,GAED,8CAA+C,CAC9C,GACA,EACA,EACA,EACA,EACA,GAED,2CAA4C,CAC3C,GACA,EACA,EACA,EACA,GAED,4CAA6C,CAC5C,GACA,EACA,EACA,EACA,GAED,yDAA0D,CACzD,GACA,EACA,IAED,4DAA6D,CAC5D,GACA,EACA,IAED,iDAAkD,CACjD,GACA,EACA,EACA,EACA,GAED,oDAAqD,CACpD,GACA,EACA,EACA,EACA,GAED,sBAAuB,CACtB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,yBAA0B,CACzB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,eAAgB,CACf,GACA,EACA,IAED,kBAAmB,CAClB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,uBAAwB,CACvB,GACA,EACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B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","file":"static/js/main.7ba3d98a.chunk.js","sourcesContent":["var map = {\n\t\"./AuthView\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./AuthView/\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./AuthView/Forms/Login\": [\n\t\t87,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./AuthView/Forms/Login.js\": [\n\t\t87,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./AuthView/Forms/SignUp\": [\n\t\t88,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t10\n\t],\n\t\"./AuthView/Forms/SignUp.js\": [\n\t\t88,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t10\n\t],\n\t\"./AuthView/index\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./AuthView/index.js\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./Dashboard\": [\n\t\t93,\n\t\t9,\n\t\t11\n\t],\n\t\"./Dashboard.js\": [\n\t\t93,\n\t\t9,\n\t\t11\n\t],\n\t\"./Error404View\": [\n\t\t95,\n\t\t9,\n\t\t12\n\t],\n\t\"./Error404View.js\": [\n\t\t95,\n\t\t9,\n\t\t12\n\t],\n\t\"./LandingPage\": [\n\t\t47,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t4,\n\t\t6\n\t],\n\t\"./LandingPage/\": [\n\t\t47,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t4,\n\t\t6\n\t],\n\t\"./LandingPage/Sections/NextSection\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t4,\n\t\t8\n\t],\n\t\"./LandingPage/Sections/NextSection/\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t4,\n\t\t8\n\t],\n\t\"./LandingPage/Sections/NextSection/index\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t4,\n\t\t8\n\t],\n\t\"./LandingPage/Sections/NextSection/index.js\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t4,\n\t\t8\n\t],\n\t\"./LandingPage/Sections/PromotionSections\": [\n\t\t45,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t5\n\t],\n\t\"./LandingPage/Sections/PromotionSections/\": [\n\t\t45,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t5\n\t],\n\t\"./LandingPage/Sections/PromotionSections/PromotionItem\": [\n\t\t85,\n\t\t9,\n\t\t13\n\t],\n\t\"./LandingPage/Sections/PromotionSections/PromotionItem.js\": [\n\t\t85,\n\t\t9,\n\t\t13\n\t],\n\t\"./LandingPage/Sections/PromotionSections/index\": [\n\t\t45,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t5\n\t],\n\t\"./LandingPage/Sections/PromotionSections/index.js\": [\n\t\t45,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t5\n\t],\n\t\"./LandingPage/index\": [\n\t\t47,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t4,\n\t\t6\n\t],\n\t\"./LandingPage/index.js\": [\n\t\t47,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t4,\n\t\t6\n\t],\n\t\"./LogoutView\": [\n\t\t94,\n\t\t7,\n\t\t14\n\t],\n\t\"./LogoutView.js\": [\n\t\t94,\n\t\t7,\n\t\t14\n\t],\n\t\"./TripvixiaIFrame\": [\n\t\t96,\n\t\t9,\n\t\t15\n\t],\n\t\"./TripvixiaIFrame.js\": [\n\t\t96,\n\t\t9,\n\t\t15\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 112;\nmodule.exports = webpackAsyncContext;","const globalTypes = {\n    LOG_OUT: 'log/out',\n}\n\nexport default globalTypes\n","import { createAction } from '@reduxjs/toolkit'\nimport globalTypes from './globalTypes'\n\nexport const logout = createAction(globalTypes.LOG_OUT)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as authSelectors from '../store/reducers/auth/selectors'\nimport { logout } from '../store/reducers/globalActions'\n\nconst withLayout = (WrappedComponent) => {\n    const HOC = class extends Component {\n        render() {\n            return <WrappedComponent {...this.props} />\n        }\n    }\n    HOC.displayName = 'WithLayout'\n    return connect(\n        (state) => ({\n            authenticated: authSelectors.authenticatedSelector(state),\n            userData: authSelectors.userDataSelector(state),\n        }),\n        (dispatch) => ({ logout: () => dispatch(logout()) })\n    )(HOC)\n}\n\nexport default withLayout\n","import { Route } from 'react-router-dom'\n// import PrivateRoute from \"./CustomRoutes/PrivateRoute\"\n// import PublicRoute from './CustomRoutes/PublicRoute'\nimport * as paths from '../constants/routerConstants'\n// import SignInLayout from './../components/Layouts/SignInLayout'\n\nconst routes = [\n    // {\n    //     name: 'Example',\n    //     path: 'login',\n    //     component: Login,\n    //     auth: false,\n    //     route: PublicRoute,\n    //     routes: []\n    //     layout: NoAuthLayout\n    // },\n    {\n        name: 'LandingPage',\n        path: paths.HomePath,\n        route: Route,\n        componentProps: { routes: [] },\n        exact: true,\n    },\n    // {\n    //     name: 'AuthView',\n    //     path: paths.LoginInPath,\n    //     route: PublicRoute,\n    //     componentProps: {\n    //         auth: 'login',\n    //         routes: [],\n    //     },\n    //     layout: SignInLayout,\n    // },\n    // {\n    //     name: 'AuthView',\n    //     path: paths.SignInPath,\n    //     route: PublicRoute,\n    //     componentProps: {\n    //         auth: 'signin',\n    //         routes: [],\n    //     },\n    //     layout: SignInLayout,\n    // },\n    // {\n    //     name: 'TripvixiaIFrame',\n    //     path: paths.TravelPath,\n    //     layout: SignInLayout,\n    //     route: Route,\n    // },\n    {\n        name: 'Error404View',\n        route: Route,\n    },\n]\n\nexport default routes\n","import React from 'react'\nimport { Spin } from 'antd'\n\nconst PageLoading = (props) => {\n    return (\n        <div className=\"flex-1 flex justify-center items-center\">\n            <Spin />\n        </div>\n    )\n}\n\nexport default PageLoading\n","import React, { Component } from 'react'\nimport { Switch, BrowserRouter as Router } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport loadable from '@loadable/component'\n\nimport withLayout from './../HOCS/withLayout'\nimport routes from './routes'\nimport PageLoading from './../components/PageLoadings/PageLoading'\n// import { HomePath, SignInPath } from '../constants/routerConstants'\n// import SignInLayout from '../components/Layouts/SignInLayout'\n\n// const LandingPage = loadable(() => import('../views/LandingPage'))\n// const SigninView = loadable(() => import('../views/SigninView'))\n\n// const AsyncPage = loadable((props) => import(`../views/${props.page}`))\n\nclass AppRouter extends Component {\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    {routes.map((route, index) => {\n                        return (\n                            <route.route\n                                key={`route-${route.name}`}\n                                path={route.path}\n                                exact={route.exact}\n                                component={withLayout((props) => {\n                                    const Component = loadable(\n                                        () => import(`../views/${route.name}`),\n                                        {\n                                            fallback: <PageLoading />,\n                                        }\n                                    )\n                                    return route?.layout ? (\n                                        <route.layout {...props}>\n                                            <Component\n                                                {...route?.componentProps}\n                                            />\n                                        </route.layout>\n                                    ) : (\n                                        <Component\n                                            {...props}\n                                            {...route?.componentProps}\n                                        />\n                                    )\n                                })}\n                            />\n                        )\n                    })}\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default connect((state) => ({}), null)(AppRouter)\n","/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from '../store/reducers/globalActions'\nimport { lastLogginSelector } from './../store/reducers/auth/selectors'\n\nclass SessionManager extends Component {\n    componentDidMount() {\n        this.expiredSession()\n    }\n\n    expiredSession = () => {\n        const { lastLoggin, logout } = this.props\n        if (lastLoggin) {\n            const now = new Date()\n            const _lastLoggin = new Date(lastLoggin)\n            const hour24 = 24 * 60 * 60 * 1000\n\n            if (now.getTime() - _lastLoggin.getTime() >= hour24) {\n                logout()\n            }\n        }\n    }\n\n    render() {\n        return null\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    lastLoggin: lastLogginSelector(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({ logout: () => dispatch(logout()) })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionManager)\n","import React from 'react'\nimport Router from '../Router'\nimport SessionManager from './SessionManager'\n\nimport '../styles/App.less'\n\nconst App = () => {\n    // const [isDarkMode, setIsDarkMode] = React.useState()\n    // const { switcher, currentTheme, status, themes } = useThemeSwitcher()\n\n    // const toggleTheme = (isChecked) => {\n    //     setIsDarkMode(isChecked)\n    //     switcher({ theme: isChecked ? themes.dark : themes.light })\n    // }\n\n    // Avoid theme change flicker\n    // const handleClick = () => {}\n\n    return (\n        <React.Fragment>\n            <SessionManager />\n            <Router />\n        </React.Fragment>\n    )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport globalTypes from './globalTypes'\nimport auth from './auth'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['auth'],\n}\n\nconst appReducer = combineReducers({\n    auth,\n})\n\nconst rootReducer = (state, action) => {\n    if (action.type === globalTypes.LOG_OUT) {\n        storage.removeItem('persist:root')\n        return appReducer(undefined, action)\n    }\n\n    return appReducer(state, action)\n}\n\nexport default persistReducer(persistConfig, rootReducer)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\n// import { ThemeSwitcherProvider } from 'react-css-theme-switcher'\nimport reportWebVitals from './reportWebVitals'\nimport configureStore from './store/config/index'\n\nconst store = configureStore()\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { applyMiddleware, createStore, compose } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { persistStore } from 'redux-persist'\n\nimport rootReducers from '../reducers'\n\nconst configureStore = () => {\n    const middlewares = [thunkMiddleware]\n\n    const composeEnhancers =\n        (typeof window !== 'undefined' &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n        compose\n    // const persistedState\n\n    const store = createStore(\n        rootReducers,\n        composeEnhancers(applyMiddleware(...middlewares))\n    )\n\n    const persistor = persistStore(store)\n\n    return { store, persistor }\n}\n\nexport default configureStore\n","import { createSelector } from 'reselect'\n\nexport const authReducerSelector = createSelector(\n    (state) => state.auth,\n    (authReducer) => authReducer\n)\n\nexport const authenticatedSelector = createSelector(\n    authReducerSelector,\n    (authReducer) => authReducer.auth\n)\n\nexport const lastLogginSelector = createSelector(\n    authReducerSelector,\n    (authReducer) => authReducer.lastLoggin\n)\n\nexport const userDataSelector = createSelector(\n    authReducerSelector,\n    (authReducer) => authReducer.userData\n)\n","export const LOG_OUT = 'logout'\nexport const USER_AUTH = 'auth/setData'\nexport const SIGN_UP = 'auth/signup'\nexport const SIGN_IN = 'auth/signin'\nexport const SENDUSER_DATA = 'signup/sendUserData'\n","import axios from 'axios'\n\nconst axiosInstance = axios.create({\n    baseURL:\n        process.env.NODE_ENV === 'production'\n            ? 'http://localhost:3000/'\n            : 'http://localhost:3000/',\n})\n\naxiosInstance.interceptors.response.use(\n    (response) =>\n        new Promise((resolve, reject) => {\n            resolve(response)\n        }),\n    (error) => {\n        if (!error.response) {\n            return new Promise((resolve, reject) => {\n                reject(error)\n            })\n        }\n        if (error.response.status === 403) {\n            // window.location = '/logout'\n        } else {\n            return new Promise((resolve, reject) => {\n                reject(error)\n            })\n        }\n    }\n)\nexport default axiosInstance\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport * as types from './types'\nimport axiosInstance from './../../services/axiosConfig'\n\n// export const sendUserData = createAsyncThunk(\n//     types.SENDUSER_DATA,\n//     async (user, { dispatch }) => {\n//         const id = 0\n\n//         const generator = UUID(id)\n//         const uuid = generator.uuid()\n//         const result = axiosInstance.post('user/send/data', {\n//             userId: uuid,\n//             firstName: user?.firstName ? user?.firstName : '',\n//             lastName: user?.lastName ? user?.lastName : '',\n//             email: user.email,\n//         })\n//         return result\n//     }\n// )\n\nexport const signIn = createAsyncThunk(\n    types.SIGN_IN,\n    async (user, { rejectWithValue }) => {\n        try {\n            const response = await axiosInstance.post('auth/signin', {\n                email: user.email,\n                password: user.password,\n            })\n\n            return response.data\n        } catch (error) {\n            if (!error.response) {\n                throw error\n            }\n\n            console.log({ error })\n            return rejectWithValue(error.response.data)\n        }\n    }\n)\n\nexport const signUp = createAsyncThunk(\n    types.SIGN_UP,\n    async (user, { rejectWithValue }) => {\n        try {\n            const result = await axiosInstance.post('auth/signup', {\n                firstName: user?.firstName ?? '',\n                lastName: user?.lastName ?? '',\n                email: user.email,\n                username: user.username,\n                password: user.password,\n            })\n\n            return result.data\n        } catch (error) {\n            if (!error.response) {\n                throw error\n            }\n            console.log({ error })\n            return rejectWithValue(error.response.data)\n        }\n    }\n)\n","export const RootPath = process.env.NODE_ENV === 'production' ? '' : ''\n\nexport const HomePath = `${RootPath}/`\nexport const LoginInPath = `${RootPath}/login`\nexport const SignInPath = `${RootPath}/signup`\nexport const LogOutPath = `${RootPath}/logout`\nexport const TravelPath = `${RootPath}/travel`\n\nexport const tripvixiaURL =\n    'https://members.tripvixia.com/membership/signup?invite=0e3cb515-2949-4e1a-bb83-fd7fe4a5b251&referraltype=3'\n","import { createReducer } from '@reduxjs/toolkit'\nimport { signIn } from './actions'\n\nconst initialState = {\n    auth: false,\n    accessToken: null,\n    userData: {\n        id: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        verified: '',\n    },\n    lastLoggin: null,\n}\n\nconst authReducer = createReducer(initialState, (builder) => {\n    builder.addCase(\n        signIn.fulfilled,\n        (state, { payload: { accessToken, user } }) => ({\n            ...state,\n            auth: true,\n            accessToken: accessToken,\n            userData: user,\n            lastLoggin: new Date(),\n        })\n    )\n})\n\nexport default authReducer\n","import authReducer from './authReducer'\nimport * as actions from './actions'\nimport * as types from './types'\nimport * as selectors from './selectors'\n\nexport const actionsAuth = actions\nexport const typesAuth = types\nexport const selectorsAuth = selectors\nexport default authReducer\n"],"sourceRoot":""}