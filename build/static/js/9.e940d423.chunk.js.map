{"version":3,"sources":["services/promises.js","container/Auth/LoginContainer.js","hooks/web3Hooks/useContract.js","constants/addressConstants.js","hooks/web3Hooks/useNFTs.js","hooks/utils/_useResolveCall.js","container/Auth/SignUpContainer.js","views/AuthView/index.js","views/AuthView/Forms/Login.js","constants/countrys.js","constants/language.js","wallet/connectors.js","services/wallet.js","hooks/useAuth.js","views/AuthView/Forms/SignUp.js","services/yupValidations.js","components/CreateAntField/index.js","hooks/useActiveWeb3React.js","services/providers.js","../node_modules/fast-deep-equal/react.js"],"names":["timeout","ms","Promise","resolve","setTimeout","sleep","fn","a","delay","connect","state","dispatch","signIn","userData","actionsAuth","sendMail","mail","restProps","useState","showError","setShowError","errorMessage","setErrorMessage","handleSetError","Login","onSubmit","emailOrUsername","password","setSubmitting","email","then","resSignIn","error","payload","message","user","mailSent","getERC721Contract","address","signer","abi","signerOrProvider","genericProvider","ethers","Contract","getContract","nftAbi","process","REACT_APP_LAND_DESTINARE_CONTRACT_ADDRESS","REACT_APP_AVATAR_DESTINARE_CONTRACT_ADDRESS","useGetUserBalance","useActiveWeb3React","account","library","erc721Contract","useMemo","getSigner","useERC721Contract","call","initialData","params","isFetching","setIsFetching","setError","data","setData","paramsRef","useRef","isDeepEqual","current","fetch","useCallback","throwOnError","fetchParams","onComplete","onError","onSuccess","combinedParams","results","isEmpty","Array","isArray","length","isLoading","_useResolveCall","balanceOf","balance","parseInt","Number","console","log","rest","useEffect","reload","signUp","useWeb3React","userBalance","disableSignUp","SignUp","walletAddress","confirmPassword","restValues","toLowerCase","resSignUp","disabled","AuthView","FormAuth","auth","LoginContainer","SignUpContainer","history","useHistory","className","style","flex","sm","href","onClick","e","preventDefault","push","HomePath","width","height","schema","Yup","validations","generic","initialValues","Fragment","validationSchema","isSubmitting","values","component","AntInput","name","type","placeholder","hasFeedback","value","AntInputPassword","iconRender","visible","showIcon","Item","block","htmlType","loading","paddingTop","paddingBottom","top","SignInPath","countrys","availableLangues","injected","InjectedConnector","supportedChainIds","setupNetwork","ethereum","window","chainId","request","method","toString","chainName","rpcUrls","useAuth","activate","deactivate","login","msg","UnsupportedChainIdError","NoEthereumProviderError","UserRejectedRequestErrorInjected","logout","firstName","lastName","country","language","discordId","passwordConfirmation","userName","SigUp","AntSelect","showSearch","selectOptions","EyeTwoTone","EyeInvisibleOutlined","onPointerDown","LoginInPath","SUPPORTED_FORMATS","regex","min","max","matches","required","oneOf","test","validator","isAlphanumeric","isEthereumAddress","lowercase","phone","isAlpha","replace","birthDate","city","line","postalCode","file","size","includes","min20Usd","_v","parseFloat","no0Usd","boolean","onlyNumber","isColor","s","Option","color","number","array","validateIsNotCurrentUser","currentUser","currentMembers","userMail","valid","index","FormItem","Form","Select","CreateAntField","AntComponent","field","form","label","defaultSelected","submitCount","props","touched","submitted","hasError","errors","submittedError","touchedError","help","validateStatus","onBlur","setFieldTouched","onChange","target","setFieldValue","map","DatePicker","Input","Password","TimePicker","web3React","refEth","provider","setProvider","REACT_APP_CHAIN_ID","providers","StaticJsonRpcProvider","module","exports","equal","b","constructor","i","keys","RegExp","source","flags","valueOf","Object","prototype","hasOwnProperty","key","$$typeof"],"mappings":"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,IAAEA,OAAF,EAAEA,EAAQ1G,gBAAgB4E,gBAEnC,cAAC,IAAD,CACI+B,UAAWO,IACXL,KAAK,WACLC,KAAK,WACLC,YAAY,WACZzB,UAAU,kBACV0B,aAAW,EACXG,WAAY,SAACC,GAAD,OACRA,EACI,cAAC,IAAD,IAEA,cAAC,IAAD,KAGRH,MAAK,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAQzG,WAElBR,GACG,cAAC,IAAD,CACI6F,UAAU,OACV9E,QAASb,EACTmH,KAAK,QACLO,UAAQ,IAGhB,cAAC,IAAQC,KAAT,CAAchC,UAAU,OAAxB,SACI,cAAC,IAAD,CACIiC,OAAK,EACLT,KAAK,UACLU,SAAS,SACTlC,UAAU,qDAEVmC,QAAShB,EACTlB,MAAO,CACHmC,WAAY,MACZC,cAAe,OATvB,qBAeJ,sBAAKrC,UAAU,wCAAf,UACI,mBACIwB,KAAK,OACLxB,UAAU,mDAFd,8BAMA,uBACIA,UAAU,4CACVC,MAAO,CAAEqC,IAAK,QAFlB,UAIK,0BACD,mBACItC,UAAU,4CACVI,KAAK,IACLC,QAAS,SAACC,GACNA,EAAEC,iBAEFT,EAAQU,KAAK+B,MANrB,kCAgBlBpI,GAAa,qBAAK6F,UAAU,qB,4JCjH7BwC,EAAW,CACpB,cACA,gBACA,UACA,UACA,iBACA,UACA,SACA,WACA,aACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,UACA,yBACA,WACA,gBACA,SACA,iCACA,oBACA,WACA,eACA,UACA,WACA,WACA,SACA,aACA,iBACA,2BACA,OACA,QACA,QACA,mBACA,0BACA,WACA,UACA,QACA,eACA,aACA,qBACA,UACA,SACA,iBACA,mCACA,UACA,WACA,WACA,qBACA,aACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,8BACA,gBACA,iCACA,OACA,UACA,SACA,gBACA,mBACA,8BACA,QACA,SACA,UACA,UACA,QACA,YACA,qBACA,SACA,YACA,UACA,aACA,OACA,YACA,SACA,gBACA,SACA,QACA,oCACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,UACA,SACA,QACA,cACA,UACA,QACA,SACA,aACA,QACA,WACA,gBACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,aACA,YACA,UACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,cACA,uBACA,gBACA,cACA,YACA,QACA,UACA,OACA,iBACA,2BACA,SACA,OACA,WACA,QACA,wBACA,SACA,mBACA,WACA,OACA,cACA,WACA,SACA,WACA,cACA,QACA,UACA,UACA,qBACA,SACA,qCACA,mBACA,eACA,wBACA,cACA,4BACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,eACA,WACA,WACA,kBACA,UACA,eACA,QACA,YACA,WACA,yBACA,YACA,SACA,cACA,SACA,aACA,WACA,WACA,cACA,OACA,UACA,QACA,sBACA,UACA,SACA,eACA,2BACA,SACA,SACA,uBACA,iBACA,gBACA,uCACA,UACA,gBACA,aACA,UACA,gCACA,YACA,UACA,2BACA,wBACA,oBACA,iBACA,QACA,sBACA,iBACA,SACA,YCpPSC,EAAmB,CAC5B,UACA,UACA,SACA,UACA,UACA,Y,2CCJSC,EAAW,IAAIC,IAAkB,CAC1CC,kBAAmB,CAAC,KCHXC,EAAY,uCAAG,8BAAAtJ,EAAA,2DAClBuJ,EAAWC,OAAOD,UADA,wBAIdE,EAAUzE,SAASxC,IAAwC,IAJ7C,kBAMV+G,EAASG,QAAQ,CACnBC,OAAQ,0BACRtG,OAAQ,CACJ,CACIoG,QAAQ,KAAD,OAAOA,EAAQG,SAAS,KAC/BC,UAAW,mBASXC,QAAS,CAAC,qCApBN,iCAyBT,GAzBS,uCA2BhB5E,QAAQzD,MAAM,2CAAd,MA3BgB,mBA4BT,GA5BS,uCA+BpByD,QAAQzD,MACJ,oFAhCgB,mBAkCb,GAlCa,yDAAH,qD,SC2CVsI,EAjCC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","file":"static/js/9.e940d423.chunk.js","sourcesContent":["const returnPromise = (callback) => {\r\n    return new Promise((resolve, reject) => callback(resolve, reject))\r\n}\r\n\r\nconst timeout = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nconst sleep = async (fn, delay = 300) => {\r\n    await timeout(delay)\r\n    return fn()\r\n}\r\n\r\nexport { returnPromise, timeout, sleep }\r\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { sleep } from '../../services/promises'\nimport * as actionsAuth from '../../store/reducers/auth/actions'\nimport Login from '../../views/AuthView/Forms/Login'\n// import { tripvixiaURL } from './../../constants/s\n\nconst LoginContainer = ({ signIn, sendMail, ...restProps }) => {\n    const [showError, setShowError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleSetError = (errorMessage) => {\n        setShowError(true)\n        setErrorMessage(errorMessage)\n    }\n    const handleSubmitForm = (\n        { emailOrUsername, password },\n        { setSubmitting }\n    ) => {\n        setShowError(false)\n        signIn({ email: emailOrUsername, password }).then((resSignIn) => {\n            if (resSignIn?.error) {\n                if (resSignIn.payload?.message === 'InvalidCredentials') {\n                    handleSetError(\n                        'There was a problem logging in. Please check your email and password'\n                    )\n                } else if (resSignIn.payload?.message) {\n                    handleSetError(resSignIn.payload?.message)\n                } else {\n                    handleSetError('Internar server error')\n                }\n                sleep(() => {\n                    setSubmitting(false)\n                })\n            } else {\n                const { user } = resSignIn.payload\n                if (!user?.mailSent) {\n                    sendMail(emailOrUsername)\n                }\n            }\n            // else {\n            //     windowOpen(tripvixiaURL)\n            //     sleep(() => {\n            //         setSubmitting(false)\n            //     })\n            // }\n        })\n    }\n\n    return (\n        <Login\n            showError={showError}\n            errorMessage={errorMessage}\n            onSubmit={handleSubmitForm}\n            {...restProps}\n        />\n    )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = (dispatch) => ({\n    signIn: (userData) => dispatch(actionsAuth.signIn(userData)),\n    sendMail: (mail) => dispatch(actionsAuth.sendMail(mail)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)\n","import { ethers } from 'ethers'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from './../useActiveWeb3React'\nimport nftAbi from '../../abi/nftAbi.json'\nimport { genericProvider } from './../../services/providers'\n\nconst getContract = (abi, address, signer) => {\n    const signerOrProvider = signer ?? genericProvider\n    return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nconst getERC721Contract = (address, signer) => {\n    return getContract(nftAbi, address, signer)\n}\n\nexport const useERC721Contract = (address) => {\n    const { library, account } = useActiveWeb3React()\n    return useMemo(\n        () => getERC721Contract(address, library.getSigner()),\n        [address, library, account]\n    )\n}\n","export const LAND_ADDRESS =\n    process.env.REACT_APP_LAND_DESTINARE_CONTRACT_ADDRESS\nexport const NFT_ADDRESS =\n    process.env.REACT_APP_AVATAR_DESTINARE_CONTRACT_ADDRESS\nexport const NFT_ADDRESS_GENESIS =\n    process.env.REACT_APP_AVATAR_GENESIS_DESTINARE_CONTRACT_ADDRESS\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000'\n","import { useCallback, useEffect } from 'react'\nimport useActiveWeb3React from './../useActiveWeb3React'\nimport { _useResolveCall } from './../utils/_useResolveCall'\nimport { useERC721Contract } from './useContract'\nimport { NFT_ADDRESS_GENESIS } from '../../constants/addressConstants'\n\nexport const useGetUserBalance = () => {\n    const { account, library } = useActiveWeb3React()\n\n    const erc721Contract = useERC721Contract(NFT_ADDRESS_GENESIS)\n\n    const fetchTotalSupply = useCallback(async () => {\n        try {\n            if (account) {\n                const balance = await erc721Contract.balanceOf(account)\n\n                return parseInt(Number(balance))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }, [erc721Contract, account])\n\n    const { fetch, ...rest } = _useResolveCall(fetchTotalSupply, null, {})\n\n    useEffect(() => {\n        fetch()\n    }, [fetch, library])\n\n    return { reload: fetch, ...rest }\n}\n","import isDeepEqual from 'fast-deep-equal/react'\nimport { useCallback, useMemo, useState, useRef } from 'react'\n\nexport const _useResolveCall = (\n    call,\n    initialData = null,\n    params = {},\n    autoFetch = false\n) => {\n    const [isFetching, setIsFetching] = useState(false)\n    const [error, setError] = useState(null)\n    const [data, setData] = useState(initialData)\n    const paramsRef = useRef(params)\n\n    if (!isDeepEqual(paramsRef.current, params)) {\n        paramsRef.current = params\n    }\n\n    const fetch = useCallback(\n        async ({\n            throwOnError = true,\n            params: fetchParams,\n            onComplete,\n            onError,\n            onSuccess,\n        } = {}) => {\n            const combinedParams = {\n                ...params,\n                ...fetchParams,\n            }\n            try {\n                setIsFetching(true)\n                setError(null)\n                const results = await call(combinedParams)\n\n                setData(results)\n                if (onSuccess) {\n                    onSuccess(results)\n                }\n                return results\n            } catch (error) {\n                setData(initialData)\n                setError(error)\n                if (throwOnError) {\n                    throw error\n                }\n                if (onError) {\n                    onError(error)\n                }\n            } finally {\n                setIsFetching(false)\n                if (onComplete) {\n                    onComplete()\n                }\n            }\n        },\n        [call, paramsRef.current]\n    )\n\n    const isEmpty = useMemo(() => {\n        if (data == null) {\n            return true\n        }\n        if (Array.isArray(data) && data.length === 0) {\n            return true\n        }\n        return false\n    }, [data])\n\n    const isLoading = useMemo(() => {\n        return isFetching && isEmpty\n    }, [isEmpty, isFetching])\n\n    return { isFetching, fetch, isLoading, error, data, setData }\n}\n","import React, { useState, useMemo } from 'react'\nimport { connect } from 'react-redux'\nimport { sleep } from '../../services/promises'\nimport SignUp from '../../views/AuthView/Forms/SignUp'\nimport { actionsAuth } from './../../store/reducers/auth/index'\nimport { useGetUserBalance } from './../../hooks/web3Hooks/useNFTs'\nimport { useWeb3React } from '@web3-react/core'\n\nconst SignUpContainer = ({ signUp, signIn, sendMail, ...rest }) => {\n    const { account } = useWeb3React()\n    const { data: userBalance } = useGetUserBalance()\n    const [showError, setShowError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleSetError = (errorMessage) => {\n        setShowError(true)\n        setErrorMessage(errorMessage)\n    }\n\n    const handleSubmitForm = (\n        { confirmPassword, email, ...restValues },\n        { setSubmitting }\n    ) => {\n        setShowError(false)\n        signUp({\n            walletAddress: account,\n            account,\n            email: email.toLowerCase(),\n            ...restValues,\n        }).then((resSignUp) => {\n            if (resSignUp?.error) {\n                handleSetError(resSignUp.payload?.message)\n                sleep(() => {\n                    setSubmitting(false)\n                })\n            } else {\n                const { email, password } = restValues\n                signIn({ email, password }).then((resSignIn) => {\n                    if (resSignIn?.error) {\n                        handleSetError(resSignIn.payload?.message)\n                    } else {\n                        const { user } = resSignIn.payload\n                        if (!user?.mailSent) {\n                            sendMail(email)\n                        }\n                    }\n                })\n            }\n        })\n    }\n\n    const disableSignUp = useMemo(() => {\n        return !userBalance || userBalance === 0\n    }, [userBalance])\n\n    return (\n        <SignUp\n            walletAddress={account}\n            showError={showError}\n            errorMessage={errorMessage}\n            onSubmit={handleSubmitForm}\n            disabled={disableSignUp}\n            {...rest}\n        />\n    )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = (dispatch) => ({\n    signUp: (userData) => dispatch(actionsAuth.signUp(userData)),\n    signIn: (userData) => dispatch(actionsAuth.signIn(userData)),\n    sendMail: (mail) => dispatch(actionsAuth.sendMail(mail)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpContainer)\n","import React from 'react'\nimport { Row, Col } from 'antd'\n\nimport { DestinareLogoColorSVG } from '../../assets/svg/brand/index'\n\nimport LoginContainer from './../../container/Auth/LoginContainer'\nimport SignUpContainer from './../../container/Auth/SignUpContainer'\nimport { useHistory } from 'react-router'\nimport { HomePath } from '../../constants/routerConstants'\n\nconst AuthView = ({ auth }) => {\n    const FormAuth = auth === 'login' ? LoginContainer : SignUpContainer\n    const history = useHistory()\n    return (\n        <section className=\"login-content\">\n            <div className=\"absolute left-0 bottom-0 top-0 right-0 md:right-2/4 bg-womanBeach bg-cover bg-center md:bg-right md:flex hidden\"></div>\n            <div className=\"max-w-1280px px-6 relative lg:wrapper mx-auto lg:pl-4 lg:pr-4\">\n                <Row className=\"justify-center \" style={{ flex: '1' }}>\n                    <Col sm={12} className=\" flex justify-center \">\n                        {/* <div className=\"col-inner\">\n                            {auth === 'login' ? (\n                                <h2 className=\"\">\n                                    Regístrate para apoyar a tus creadores\n                                    favoritos\n                                </h2>\n                            ) : (\n                                <h2 className=\"\">\n                                    Regístrate para apoyar a tus creadores\n                                    favoritos 2\n                                </h2>\n                            )}\n                        </div> */}\n                    </Col>\n                    <Col sm={12} className=\"flex  justify-center\">\n                        <div className=\"col-inner\">\n                            <h1 className=\"mb-2 flex justify-center \">\n                                <a\n                                    href=\"#\"\n                                    onClick={(e) => {\n                                        e.preventDefault()\n                                        history.push(HomePath)\n                                    }}\n                                >\n                                    <DestinareLogoColorSVG\n                                        width={245}\n                                        height={64}\n                                    />\n                                </a>\n                            </h1>\n                            <FormAuth />\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </section>\n    )\n}\n\nAuthView.propTypes = {}\n\nexport default AuthView\n","import React from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { Button, Form as FormAnt, Alert } from 'antd'\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons'\nimport * as Yup from 'yup'\nimport { useHistory } from 'react-router'\nimport { validations } from './../../../services/yupValidations'\nimport {\n    AntInput,\n    AntInputPassword,\n} from './../../../components/CreateAntField/index'\nimport { SignInPath } from '../../../constants/routerConstants'\n\nconst schema = Yup.object({\n    emailOrUsername: validations.mail,\n    password: validations.generic,\n})\n\nconst initialValues = {\n    emailOrUsername: '',\n    password: '',\n}\n\nconst Login = ({ onSubmit, showError, errorMessage }) => {\n    const history = useHistory()\n\n    return (\n        <React.Fragment>\n            <div className=\"font-medium mb-2\">Log in</div>\n            <Formik\n                validationSchema={schema}\n                initialValues={initialValues}\n                onSubmit={onSubmit}\n            >\n                {({ isSubmitting, values }) => (\n                    <Form className=\"mb-4\">\n                        <Field\n                            component={AntInput}\n                            name=\"emailOrUsername\"\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            value={values?.emailOrUsername.toLowerCase()}\n                        />\n                        <Field\n                            component={AntInputPassword}\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            iconRender={(visible) =>\n                                visible ? (\n                                    <EyeTwoTone />\n                                ) : (\n                                    <EyeInvisibleOutlined />\n                                )\n                            }\n                            value={values?.password}\n                        />\n                        {showError && (\n                            <Alert\n                                className=\"mb-5\"\n                                message={errorMessage}\n                                type=\"error\"\n                                showIcon\n                            />\n                        )}\n                        <FormAnt.Item className=\"mb-0\">\n                            <Button\n                                block\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                className=\"text-sm px-4 py-2 py h-12 rounded-full font-medium\"\n                                // disabled={isSubmitting}\n                                loading={isSubmitting}\n                                style={{\n                                    paddingTop: '9px',\n                                    paddingBottom: '9px',\n                                }}\n                            >\n                                LOGIN\n                            </Button>\n                        </FormAnt.Item>\n                        <div className=\"login-links flex flex-col text-center\">\n                            <a\n                                type=\"link\"\n                                className=\"text-sm h-auto py-0 text-black-1 hover:text-info\"\n                            >\n                                Forgot password?\n                            </a>\n                            <span\n                                className=\"text-black-1 text-sm h-auto py-0 relative\"\n                                style={{ top: '-7px' }}\n                            >\n                                {\"Don't have an account? \"}\n                                <a\n                                    className=\"font-medium text-blue-900 hover:text-info\"\n                                    href=\"#\"\n                                    onClick={(e) => {\n                                        e.preventDefault()\n\n                                        history.push(SignInPath)\n                                    }}\n                                >\n                                    Sign up\n                                </a>\n                            </span>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n            {!showError && <div className=\"h-40px mb-5\"></div>}\n        </React.Fragment>\n    )\n}\n\nLogin.propTypes = {}\n\nexport default Login\n","export const countrys = [\n    'Afghanistan',\n    'Aland Islands',\n    'Albania',\n    'Algeria',\n    'American Samoa',\n    'Andorra',\n    'Angola',\n    'Anguilla',\n    'Antarctica',\n    'Antigua and Barbuda',\n    'Argentina',\n    'Armenia',\n    'Aruba',\n    'Australia',\n    'Austria',\n    'Azerbaijan',\n    'Bahamas',\n    'Bahrain',\n    'Bangladesh',\n    'Barbados',\n    'Belarus',\n    'Belgium',\n    'Belize',\n    'Benin',\n    'Bermuda',\n    'Bhutan',\n    'Bolivia',\n    'Bonaire',\n    'Bosnia and Herzegovina',\n    'Botswana',\n    'Bouvet Island',\n    'Brazil',\n    'British Indian Ocean Territory',\n    'Brunei Darussalam',\n    'Bulgaria',\n    'Burkina Faso',\n    'Burundi',\n    'Cambodia',\n    'Cameroon',\n    'Canada',\n    'Cape Verde',\n    'Cayman Islands',\n    'Central African Republic',\n    'Chad',\n    'Chile',\n    'China',\n    'Christmas Island',\n    'Cocos (Keeling) Islands',\n    'Colombia',\n    'Comoros',\n    'Congo',\n    'Cook Islands',\n    'Costa Rica',\n    'Croatia (Hrvatska)',\n    'Curacao',\n    'Cyprus',\n    'Czech Republic',\n    'Democratic Republic of the Congo',\n    'Denmark',\n    'Djibouti',\n    'Dominica',\n    'Dominican Republic',\n    'East Timor',\n    'Ecuador',\n    'Egypt',\n    'El Salvador',\n    'Equatorial Guinea',\n    'Eritrea',\n    'Estonia',\n    'Ethiopia',\n    'Falkland Islands (Malvinas)',\n    'Faroe Islands',\n    'Federated States of Micronesia',\n    'Fiji',\n    'Finland',\n    'France',\n    'French Guiana',\n    'French Polynesia',\n    'French Southern Territories',\n    'Gabon',\n    'Gambia',\n    'Georgia',\n    'Germany',\n    'Ghana',\n    'Gibraltar',\n    'Great Britain (UK)',\n    'Greece',\n    'Greenland',\n    'Grenada',\n    'Guadeloupe',\n    'Guam',\n    'Guatemala',\n    'Guinea',\n    'Guinea-Bissau',\n    'Guyana',\n    'Haiti',\n    'Heard Island and McDonald Islands',\n    'Honduras',\n    'Hong Kong',\n    'Hungary',\n    'Iceland',\n    'India',\n    'Indonesia',\n    'Iraq',\n    'Ireland',\n    'Israel',\n    'Italy',\n    'Ivory Coast',\n    'Jamaica',\n    'Japan',\n    'Jordan',\n    'Kazakhstan',\n    'Kenya',\n    'Kiribati',\n    'Korea (South)',\n    'Kuwait',\n    'Kyrgyzstan',\n    'Laos',\n    'Latvia',\n    'Lebanon',\n    'Lesotho',\n    'Liberia',\n    'Libya',\n    'Liechtenstein',\n    'Lithuania',\n    'Luxembourg',\n    'Macau',\n    'Macedonia',\n    'Madagascar',\n    'Malawi',\n    'Malaysia',\n    'Maldives',\n    'Mali',\n    'Malta',\n    'Marshall Islands',\n    'Martinique',\n    'Mauritania',\n    'Mauritius',\n    'Mayotte',\n    'Mexico',\n    'Moldova',\n    'Monaco',\n    'Mongolia',\n    'Montenegro',\n    'Montserrat',\n    'Morocco',\n    'Mozambique',\n    'Myanmar',\n    'Namibia',\n    'Nauru',\n    'Nepal',\n    'Netherlands',\n    'Netherlands Antilles',\n    'New Caledonia',\n    'New Zealand',\n    'Nicaragua',\n    'Niger',\n    'Nigeria',\n    'Niue',\n    'Norfolk Island',\n    'Northern Mariana Islands',\n    'Norway',\n    'Oman',\n    'Pakistan',\n    'Palau',\n    'Palestinian Territory',\n    'Panama',\n    'Papua New Guinea',\n    'Paraguay',\n    'Peru',\n    'Philippines',\n    'Pitcairn',\n    'Poland',\n    'Portugal',\n    'Puerto Rico',\n    'Qatar',\n    'Reunion',\n    'Romania',\n    'Russian Federation',\n    'Rwanda',\n    'S. Georgia and S. Sandwich Islands',\n    'Saint Barthelemy',\n    'Saint Helena',\n    'Saint Kitts and Nevis',\n    'Saint Lucia',\n    'Saint Pierre and Miquelon',\n    'Saint Vincent and the Grenadines',\n    'Samoa',\n    'San Marino',\n    'Sao Tome and Principe',\n    'Saudi Arabia',\n    'Senegal',\n    'Serbia',\n    'Seychelles',\n    'Sierra Leone',\n    'Singapore',\n    'Sint Maarten',\n    'Slovakia',\n    'Slovenia',\n    'Solomon Islands',\n    'Somalia',\n    'South Africa',\n    'Spain',\n    'Sri Lanka',\n    'Suriname',\n    'Svalbard and Jan Mayen',\n    'Swaziland',\n    'Sweden',\n    'Switzerland',\n    'Taiwan',\n    'Tajikistan',\n    'Tanzania',\n    'Thailand',\n    'Timor-Leste',\n    'Togo',\n    'Tokelau',\n    'Tonga',\n    'Trinidad and Tobago',\n    'Tunisia',\n    'Turkey',\n    'Turkmenistan',\n    'Turks and Caicos Islands',\n    'Tuvalu',\n    'Uganda',\n    'United Arab Emirates',\n    'United Kingdom',\n    'United States',\n    'United States Minor Outlying Islands',\n    'Uruguay',\n    'USSR (former)',\n    'Uzbekistan',\n    'Vanuatu',\n    'Vatican City State (Holy See)',\n    'Venezuela',\n    'Vietnam',\n    'Virgin Islands (British)',\n    'Virgin Islands (U.S.)',\n    'Wallis and Futuna',\n    'Western Sahara',\n    'Yemen',\n    'Yugoslavia (former)',\n    'Zaire (former)',\n    'Zambia',\n    'Zimbabwe',\n]\n","export const availableLangues = [\n    'English',\n    'Spanish',\n    'French',\n    'Portugu',\n    'Italian',\n    'Mandarin',\n]\n","import { InjectedConnector } from '@web3-react/injected-connector'\n\nexport const injected = new InjectedConnector({\n    supportedChainIds: [1],\n})\n","export const setupNetwork = async () => {\n    const ethereum = window.ethereum\n\n    if (ethereum) {\n        const chainId = parseInt(process.env.REACT_APP_CHAIN_ID_NETWORK, 10)\n        try {\n            await ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [\n                    {\n                        chainId: `0x${chainId.toString(16)}`,\n                        chainName: 'Ethereum Mainnet',\n                        // chainName: 'Polygon Network',\n                        // nativeCurrency: {\n                        //     name: 'ETH',\n                        //     symbol: 'ETH',\n                        //     decimals: 18,\n                        // },\n                        // rpcUrls: ['https://polygon-rpc.com/'],\n                        // blockExplorerUrls: ['https://polygonscan.com/'],\n                        rpcUrls: ['https://mainnet.infura.io/v3/'],\n                        // blockExplorerUrls: ['https://etherscan.io'],\n                    },\n                ],\n            })\n            return true\n        } catch (error) {\n            console.error('Failed to setup the network in Metamask:', error)\n            return false\n        }\n    } else {\n        console.error(\n            \"Can't setup the Polygon network on metamask because window.ethereum is undefined\"\n        )\n        return false\n    }\n}\n","import { useCallback } from 'react'\nimport { UnsupportedChainIdError } from '@web3-react/core'\nimport {\n    NoEthereumProviderError,\n    UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport { injected } from './../wallet/connectors'\nimport { setupNetwork } from './../services/wallet'\nimport useActiveWeb3React from './useActiveWeb3React'\n\nconst useAuth = () => {\n    const { chainId, activate, deactivate } = useActiveWeb3React()\n\n    const login = useCallback(\n        (msg) => {\n            activate(injected, async (error) => {\n                if (error instanceof UnsupportedChainIdError) {\n                    console.log(error)\n                    const hasSetup = await setupNetwork()\n                    if (hasSetup) {\n                        activate(injected).then(() => {})\n                    }\n                } else {\n                    if (error instanceof NoEthereumProviderError) {\n                        console.log(error)\n                    } else if (\n                        error instanceof UserRejectedRequestErrorInjected\n                    ) {\n                        console.log(error)\n                    }\n                }\n            })\n        },\n        [activate]\n    )\n\n    const logout = useCallback(() => {\n        deactivate()\n    }, [deactivate, chainId])\n\n    return { login, logout }\n}\n\nexport default useAuth\n","import React from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { Button, Form as FormAnt, Alert, Input } from 'antd'\nimport * as Yup from 'yup'\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons'\nimport { validations } from '../../../services/yupValidations'\nimport { useHistory } from 'react-router'\n\nimport { LoginInPath } from '../../../constants/routerConstants'\nimport { countrys } from './../../../constants/countrys'\nimport { availableLangues } from './../../../constants/language'\nimport useAuth from './../../../hooks/useAuth'\nimport {\n    AntInput,\n    AntInputPassword,\n    AntSelect,\n} from '../../../components/CreateAntField/index'\n\nconst schema = Yup.object({\n    firstName: validations.name,\n    lastName: validations.name,\n    email: validations.mail,\n    country: validations.generic,\n    language: validations.generic,\n    // userName: validations.userName,\n    discordId: validations.generic,\n    // walletAddress: validations.walletAddress,\n    password: validations.password,\n    confirmPassword: validations.passwordConfirmation,\n})\n\nconst initialValues = {\n    firstName: '',\n    lastName: '',\n    userName: '',\n    email: '',\n    // country: null,\n    discordId: '',\n    password: '',\n    confirmPassword: '',\n}\n\nconst SigUp = ({\n    onSubmit,\n    showError,\n    errorMessage,\n    disabled,\n    walletAddress,\n}) => {\n    const history = useHistory()\n    const { login } = useAuth()\n\n    return (\n        <React.Fragment>\n            <div className=\"font-medium mb-2\">Sign up</div>\n            <Formik\n                validationSchema={schema}\n                initialValues={initialValues}\n                onSubmit={onSubmit}\n            >\n                {({ values, isSubmitting }) => (\n                    <Form className=\"mb-4\">\n                        <div className=\"flex flex-row space-x-2\">\n                            <Field\n                                component={AntInput}\n                                type=\"text\"\n                                name=\"firstName\"\n                                placeholder=\"* First Name\"\n                                className=\"h-12 rounded-lg\"\n                                hasFeedback\n                                value={values?.firstName}\n                            />\n                            <Field\n                                component={AntInput}\n                                type=\"text\"\n                                name=\"lastName\"\n                                placeholder=\"* Last Name\"\n                                className=\"h-12 rounded-lg\"\n                                hasFeedback\n                                value={values?.lastName}\n                            />\n                        </div>\n                        <Field\n                            component={AntInput}\n                            name=\"email\"\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            value={values?.email.toLowerCase()}\n                        />\n                        <Field\n                            component={AntSelect}\n                            name=\"country\"\n                            showSearch\n                            // type=\"email\"\n                            placeholder=\"Country of Residence\"\n                            className=\"h-12 rounded-lg custom-ant-select\"\n                            selectOptions={countrys}\n                            // hasFeedback\n                            value={values?.country}\n                        />\n                        <Field\n                            component={AntSelect}\n                            name=\"language\"\n                            showSearch\n                            // type=\"email\"\n                            placeholder=\"Preferred Language\"\n                            className=\"h-12 rounded-lg custom-ant-select\"\n                            selectOptions={availableLangues}\n                            // hasFeedback\n                            value={values?.language}\n                        />\n                        {/* <Field\n                            component={AntInput}\n                            type=\"text\"\n                            name=\"userName\"\n                            placeholder=\"Username\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            value={values?.userName}\n                        /> */}\n                        <Field\n                            component={AntInput}\n                            type=\"text\"\n                            name=\"discordId\"\n                            placeholder=\"Discord ID\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            value={values?.discordId}\n                        />\n                        <Input\n                            type=\"text\"\n                            name=\"walletAddress\"\n                            placeholder=\"Wallet Address\"\n                            className=\"h-12 rounded-lg mb-5\"\n                            value={walletAddress ?? ''}\n                            disabled\n                        />\n                        <Field\n                            component={AntInputPassword}\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            iconRender={(visible) =>\n                                visible ? (\n                                    <EyeTwoTone />\n                                ) : (\n                                    <EyeInvisibleOutlined />\n                                )\n                            }\n                            value={values?.password}\n                        />\n                        <Field\n                            component={AntInputPassword}\n                            name=\"confirmPassword\"\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            iconRender={(visible) =>\n                                visible ? (\n                                    <EyeTwoTone />\n                                ) : (\n                                    <EyeInvisibleOutlined />\n                                )\n                            }\n                            value={values?.confirmPassword}\n                        />\n                        {showError && (\n                            <Alert\n                                className=\"mb-5\"\n                                message={errorMessage}\n                                type=\"error\"\n                                showIcon\n                            />\n                        )}\n\n                        <FormAnt.Item className=\"mb-0\">\n                            <Button\n                                type=\"primary\"\n                                block\n                                className=\"text-sm px-4 py-2 py h-12 rounded-full font-medium\"\n                                htmlType=\"submit\"\n                                loading={isSubmitting}\n                                style={{\n                                    paddingTop: '9px',\n                                    paddingBottom: '9px',\n                                }}\n                                disabled={disabled}\n                            >\n                                Register\n                            </Button>\n                            <Button\n                                type=\"primary\"\n                                block\n                                className=\"text-sm px-4 py-2 mt-4 py h-12 rounded-full font-medium\"\n                                style={{\n                                    paddingTop: '9px',\n                                    paddingBottom: '9px',\n                                }}\n                                onPointerDown={login}\n                                disabled={walletAddress}\n                            >\n                                Connect Metamask\n                            </Button>\n                        </FormAnt.Item>\n                    </Form>\n                )}\n            </Formik>\n\n            <div className=\"login-links text-center\">\n                <span\n                    className=\"text-black-1 text-sm h-auto py-0 relative\"\n                    style={{ top: '-7px' }}\n                >\n                    Already have an account.\n                    <a\n                        className=\"font-medium text-blue-200 hover:text-info\"\n                        href=\"#\"\n                        onClick={(e) => {\n                            e.preventDefault()\n\n                            history.push(LoginInPath)\n                        }}\n                    >\n                        {' '}\n                        Log in\n                    </a>\n                </span>\n            </div>\n            {!showError && <div className=\"h-40px mb-5\"></div>}\n        </React.Fragment>\n    )\n}\n\nSigUp.propTypes = {}\n\nexport default SigUp\n","import * as Yup from 'yup'\nimport validator from 'validator'\n\nexport const SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\n\nconst FILE_SIZE = 100 * 1024\n\nexport const regex = {\n    alpha: /^[A-Za-z]+$/,\n    alphaNumeric: /[a-zA-Z0-9]/,\n    atLeastOneUpperCase: /[A-Z]/,\n    phoneNumber:\n        /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\n    exact5: /^[0-9]{5}$/,\n}\n\nexport const validations = {\n    password: Yup.string()\n        .min(8, 'Too Short!')\n        .max(64, 'Too Long!')\n        .matches(\n            regex.atLeastOneUpperCase,\n            'Must contain al least one uppercase letter.'\n        )\n        .required('Required'),\n    passwordConfirmation: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Required'),\n    userName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(64, 'Too Long!')\n        .test(\n            'alphaNumeric',\n            'Must contain only letters and numbers.',\n            (value) => value && validator.isAlphanumeric(value)\n        )\n        .required('Required'),\n    walletAddress: Yup.string()\n        .min(3, 'Too Short!')\n        .max(64, 'Too Long!')\n        .test(\n            'alphaNumeric',\n            'Must be a valid wallet address.',\n            (value) => value && validator.isEthereumAddress(value)\n        )\n        .required('Required'),\n    mail: Yup.string()\n        .max(64, 'Too Long!')\n        .lowercase('Must contain only lower case')\n        .email('Must be a valid email format. example@email.com')\n        .required('Required'),\n    phone: Yup.string()\n        .matches(regex.phoneNumber, 'Must be a valid phone number.')\n        .required('Required'),\n    name: Yup.string()\n        .min(3, 'Too Short!')\n        .max(30, 'Too Long!')\n        .test(\n            'alpha',\n            'Must contain only letters.',\n            (value) =>\n                !value || (value && validator.isAlpha(value.replace(' ', '')))\n        ),\n    // .required('Required'),\n    birthDate: Yup.date().required('Required'),\n    country: Yup.string().required('Required'),\n    state: Yup.string().required('Required'),\n    city: Yup.string().required('Required'),\n    line: Yup.string().required('Required'),\n    postalCode: Yup.string()\n        .matches(regex.exact5, 'Must be exactly 5 digits')\n        .required('Required'),\n    file: Yup.mixed()\n        .required('A file is required')\n        .test(\n            'fileSize',\n            'File too large',\n            (value) => value && value[0].size <= FILE_SIZE\n        )\n        .test(\n            'fileFormat',\n            'Unsupported Format',\n            (value) => value && SUPPORTED_FORMATS.includes(value[0].type)\n        )\n        .required('Required'),\n    min20Usd: Yup.mixed()\n        .required('Required')\n        .test('usdAmount', 'Minimum to invest is 20 USD', (value) => {\n            if (value) {\n                let _v = value\n                _v = _v.replace(/\\D/g, '')\n                _v = parseFloat(_v)\n                return _v >= 20.0\n            }\n            return false\n        }),\n    no0Usd: Yup.mixed()\n        .required('Required')\n        .test('usdAmount', 'Usd amount must be higher than 0', (value) => {\n            if (value) {\n                let _v = value\n                _v = parseFloat(_v)\n                return _v > 0.0\n            }\n            return false\n        }),\n    generic: Yup.string().max(64, 'Too Long!').required('Required'),\n    boolean: Yup.bool().oneOf([true], 'Field must be checked'),\n    onlyNumber: Yup.mixed()\n        .required('Required')\n        .test('onlyNumber', 'Field must be a number', (value) => {\n            if (value) {\n                const _v = value\n                const isnum = /^\\d+$/.test(_v)\n\n                return isnum\n            }\n            return false\n        }),\n    isColor: Yup.mixed()\n        .required('Required')\n        .test(\n            'color',\n            'Field must be a valid color format. Examples. RGBA: rgba(0, 0, 0, 1), HEXA: #000000, RGB: rgb(0,0,0), Color: red',\n            (value) => {\n                if (value) {\n                    const s = new Option().style\n                    s.color = value\n                    return s.color !== ''\n                }\n                return false\n            }\n        ),\n    number: Yup.number().required('Required'),\n    array: Yup.array().required('Required'),\n    validateIsNotCurrentUser: (currentUser, currentMembers) => {\n        return Yup.mixed()\n            .required('Required')\n            .test('validUserName', 'You can not add yourself', (value) => {\n                if (value) {\n                    if (\n                        value === currentUser.userName ||\n                        value === currentUser.userMail\n                    )\n                        return false\n                    return true\n                }\n                return false\n            })\n            .test(\n                'validateIsNotExistingMember',\n                'You can not add existing members',\n                (value) => {\n                    if (value) {\n                        let valid = true\n\n                        for (\n                            let index = 0;\n                            index < currentMembers.length;\n                            index++\n                        ) {\n                            const { userName, userMail } = currentMembers[index]\n                            if (value === userName || value === userMail) {\n                                valid = false\n                                break\n                            }\n                        }\n                        return valid\n                    }\n                    return false\n                }\n            )\n    },\n}\n","/* eslint-disable react/display-name */\nimport React from 'react'\nimport { DatePicker, Form, Input, TimePicker, Select } from 'antd'\n\nconst FormItem = Form.Item\nconst { Option } = Select\n\nconst CreateAntField =\n    (AntComponent) =>\n    ({\n        field,\n        form,\n        hasFeedback,\n        label,\n        defaultSelected,\n        selectOptions,\n        submitCount,\n        type,\n        ...props\n    }) => {\n        const touched = form.touched[field.name]\n        const submitted = submitCount > 0\n        const hasError = form.errors[field.name]\n        const submittedError = hasError && submitted\n        const touchedError = hasError && touched\n        const onInputChange = ({ target: { value } }) =>\n            form.setFieldValue(field.name, value)\n        const onChange = (value) => form.setFieldValue(field.name, value)\n        const onBlur = () => form.setFieldTouched(field.name, true)\n\n        return (\n            <FormItem\n                label={label}\n                hasFeedback={\n                    (hasFeedback && submitted) || (hasFeedback && touched)\n                }\n                help={submittedError || touchedError ? hasError : false}\n                validateStatus={\n                    submittedError || touchedError ? 'error' : 'success'\n                }\n            >\n                <AntComponent\n                    {...field}\n                    {...props}\n                    onBlur={onBlur}\n                    onChange={type ? onInputChange : onChange}\n                >\n                    {selectOptions &&\n                        selectOptions.map((name) => (\n                            <Option key={name}>{name}</Option>\n                        ))}\n                </AntComponent>\n            </FormItem>\n        )\n    }\n\nexport const AntSelect = CreateAntField(Select)\nexport const AntDatePicker = CreateAntField(DatePicker)\nexport const AntInput = CreateAntField(Input)\nexport const AntInputPassword = CreateAntField(Input.Password)\nexport const AntTimePicker = CreateAntField(TimePicker)\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { genericProvider } from '../services/providers'\n\nconst useActiveWeb3React = () => {\n    const { library, chainId, ...web3React } = useWeb3React()\n    const refEth = useRef(library)\n    const [provider, setProvider] = useState(library || genericProvider)\n\n    useEffect(() => {\n        if (library !== refEth.current) {\n            setProvider(library ?? genericProvider)\n            refEth.current = library\n        }\n    }, [library])\n    return {\n        library: provider,\n        chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10),\n        ...web3React,\n    }\n}\n\nexport default useActiveWeb3React\n","import { ethers } from 'ethers'\n\nexport const genericProvider = new ethers.providers.StaticJsonRpcProvider(\n    process.env.REACT_APP_INFURA_API_KEY\n)\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}