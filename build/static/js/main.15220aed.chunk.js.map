{"version":3,"sources":["views lazy /^/.*$/ groupOptions: {} namespace object","store/reducers/globalTypes.js","store/reducers/globalActions.js","HOCS/withLayout.js","Router/routes.js","components/PageLoadings/PageLoading.js","Router/index.js","App/SessionManager.js","App/index.js","reportWebVitals.js","store/reducers/index.js","index.js","store/config/index.js","store/reducers/auth/selectors.js","store/reducers/auth/types.js","store/services/axiosConfig.js","store/reducers/auth/actions.js","constants/routerConstants.js","store/reducers/auth/authReducer.js","store/reducers/auth/index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","globalTypes","LOG_OUT","logout","createAction","withLayout","WrappedComponent","HOC","this","props","Component","displayName","connect","state","authenticated","authSelectors","userData","dispatch","routes","name","path","paths","route","Route","componentProps","exact","PageLoading","className","AppRouter","index","component","loadable","fallback","layout","SessionManager","expiredSession","lastLoggin","now","Date","_lastLoggin","getTime","lastLogginSelector","App","Fragment","Router","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","key","storage","whitelist","appReducer","combineReducers","auth","persistReducer","action","type","removeItem","undefined","store","middlewares","thunkMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducers","applyMiddleware","persistor","persistStore","configureStore","ReactDOM","render","StrictMode","loading","document","getElementById","authReducerSelector","createSelector","authReducer","authenticatedSelector","userDataSelector","USER_AUTH","SIGN_UP","SIGN_IN","SENDUSER_DATA","axiosInstance","axios","create","baseURL","interceptors","response","use","reject","error","status","signIn","createAsyncThunk","types","user","a","rejectWithValue","post","email","password","data","console","log","signUp","firstName","lastName","username","result","HomePath","LoginInPath","SignInPath","tripvixiaURL","createReducer","accessToken","verified","builder","addCase","fulfilled","payload","actionsAuth","actions"],"mappings":"4FAAA,IAAIA,EAAM,CACT,aAAc,CACb,GACA,EACA,EACA,EACA,EACA,GAED,cAAe,CACd,GACA,EACA,EACA,EACA,EACA,GAED,yBAA0B,CACzB,GACA,EACA,EACA,EACA,EACA,GAED,4BAA6B,CAC5B,GACA,EACA,EACA,EACA,EACA,GAED,0BAA2B,CAC1B,GACA,EACA,EACA,EACA,EACA,IAED,6BAA8B,CAC7B,GACA,EACA,EACA,EACA,EACA,IAED,mBAAoB,CACnB,GACA,EACA,EACA,EACA,EACA,GAED,sBAAuB,CACtB,GACA,EACA,EACA,EACA,EACA,GAED,cAAe,CACd,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,gBAAiB,CAChB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,qCAAsC,CACrC,GACA,EACA,EACA,EACA,EACA,GAED,sCAAuC,CACtC,GACA,EACA,EACA,EACA,EACA,GAED,2CAA4C,CAC3C,GACA,EACA,EACA,EACA,EACA,GAED,8CAA+C,CAC9C,GACA,EACA,EACA,EACA,EACA,GAED,2CAA4C,CAC3C,GACA,EACA,EACA,EACA,GAED,4CAA6C,CAC5C,GACA,EACA,EACA,EACA,GAED,yDAA0D,CACzD,GACA,EACA,IAED,4DAA6D,CAC5D,GACA,EACA,IAED,iDAAkD,CACjD,GACA,EACA,EACA,EACA,GAED,oDAAqD,CACpD,GACA,EACA,EACA,EACA,GAED,sBAAuB,CACtB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,yBAA0B,CACzB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,eAAgB,CACf,GACA,EACA,IAED,kBAAmB,CAClB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,uBAAwB,CACvB,GACA,EACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B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","file":"static/js/main.15220aed.chunk.js","sourcesContent":["var map = {\n\t\"./AuthView\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./AuthView/\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./AuthView/Forms/Login\": [\n\t\t87,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./AuthView/Forms/Login.js\": [\n\t\t87,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./AuthView/Forms/SignUp\": [\n\t\t88,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t10\n\t],\n\t\"./AuthView/Forms/SignUp.js\": [\n\t\t88,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t10\n\t],\n\t\"./AuthView/index\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./AuthView/index.js\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./Dashboard\": [\n\t\t93,\n\t\t9,\n\t\t11\n\t],\n\t\"./Dashboard.js\": [\n\t\t93,\n\t\t9,\n\t\t11\n\t],\n\t\"./Error404View\": [\n\t\t95,\n\t\t9,\n\t\t12\n\t],\n\t\"./Error404View.js\": [\n\t\t95,\n\t\t9,\n\t\t12\n\t],\n\t\"./LandingPage\": [\n\t\t47,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t4,\n\t\t6\n\t],\n\t\"./LandingPage/\": [\n\t\t47,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t4,\n\t\t6\n\t],\n\t\"./LandingPage/Sections/NextSection\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t4,\n\t\t8\n\t],\n\t\"./LandingPage/Sections/NextSection/\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t4,\n\t\t8\n\t],\n\t\"./LandingPage/Sections/NextSection/index\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t4,\n\t\t8\n\t],\n\t\"./LandingPage/Sections/NextSection/index.js\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t4,\n\t\t8\n\t],\n\t\"./LandingPage/Sections/PromotionSections\": [\n\t\t45,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t5\n\t],\n\t\"./LandingPage/Sections/PromotionSections/\": [\n\t\t45,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t5\n\t],\n\t\"./LandingPage/Sections/PromotionSections/PromotionItem\": [\n\t\t85,\n\t\t9,\n\t\t13\n\t],\n\t\"./LandingPage/Sections/PromotionSections/PromotionItem.js\": [\n\t\t85,\n\t\t9,\n\t\t13\n\t],\n\t\"./LandingPage/Sections/PromotionSections/index\": [\n\t\t45,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t5\n\t],\n\t\"./LandingPage/Sections/PromotionSections/index.js\": [\n\t\t45,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t5\n\t],\n\t\"./LandingPage/index\": [\n\t\t47,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t4,\n\t\t6\n\t],\n\t\"./LandingPage/index.js\": [\n\t\t47,\n\t\t9,\n\t\t0,\n\t\t2,\n\t\t1,\n\t\t4,\n\t\t6\n\t],\n\t\"./LogoutView\": [\n\t\t94,\n\t\t7,\n\t\t14\n\t],\n\t\"./LogoutView.js\": [\n\t\t94,\n\t\t7,\n\t\t14\n\t],\n\t\"./TripvixiaIFrame\": [\n\t\t96,\n\t\t9,\n\t\t15\n\t],\n\t\"./TripvixiaIFrame.js\": [\n\t\t96,\n\t\t9,\n\t\t15\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 112;\nmodule.exports = webpackAsyncContext;","const globalTypes = {\r\n    LOG_OUT: 'log/out',\r\n}\r\n\r\nexport default globalTypes\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport globalTypes from './globalTypes'\r\n\r\nexport const logout = createAction(globalTypes.LOG_OUT)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as authSelectors from '../store/reducers/auth/selectors'\r\nimport { logout } from '../store/reducers/globalActions'\r\n\r\nconst withLayout = (WrappedComponent) => {\r\n    const HOC = class extends Component {\r\n        render() {\r\n            return <WrappedComponent {...this.props} />\r\n        }\r\n    }\r\n    HOC.displayName = 'WithLayout'\r\n    return connect(\r\n        (state) => ({\r\n            authenticated: authSelectors.authenticatedSelector(state),\r\n            userData: authSelectors.userDataSelector(state),\r\n        }),\r\n        (dispatch) => ({ logout: () => dispatch(logout()) })\r\n    )(HOC)\r\n}\r\n\r\nexport default withLayout\r\n","import { Route } from 'react-router-dom'\r\n// import PrivateRoute from \"./CustomRoutes/PrivateRoute\"\r\n// import PublicRoute from './CustomRoutes/PublicRoute'\r\nimport * as paths from '../constants/routerConstants'\r\n// import SignInLayout from './../components/Layouts/SignInLayout'\r\n\r\nconst routes = [\r\n    // {\r\n    //     name: 'Example',\r\n    //     path: 'login',\r\n    //     component: Login,\r\n    //     auth: false,\r\n    //     route: PublicRoute,\r\n    //     routes: []\r\n    //     layout: NoAuthLayout\r\n    // },\r\n    {\r\n        name: 'LandingPage',\r\n        path: paths.HomePath,\r\n        route: Route,\r\n        componentProps: { routes: [] },\r\n        exact: true,\r\n    },\r\n    // {\r\n    //     name: 'AuthView',\r\n    //     path: paths.LoginInPath,\r\n    //     route: PublicRoute,\r\n    //     componentProps: {\r\n    //         auth: 'login',\r\n    //         routes: [],\r\n    //     },\r\n    //     layout: SignInLayout,\r\n    // },\r\n    // {\r\n    //     name: 'AuthView',\r\n    //     path: paths.SignInPath,\r\n    //     route: PublicRoute,\r\n    //     componentProps: {\r\n    //         auth: 'signin',\r\n    //         routes: [],\r\n    //     },\r\n    //     layout: SignInLayout,\r\n    // },\r\n    // {\r\n    //     name: 'TripvixiaIFrame',\r\n    //     path: paths.TravelPath,\r\n    //     layout: SignInLayout,\r\n    //     route: Route,\r\n    // },\r\n    {\r\n        name: 'Error404View',\r\n        route: Route,\r\n    },\r\n]\r\n\r\nexport default routes\r\n","import React from 'react'\r\nimport { Spin } from 'antd'\r\n\r\nconst PageLoading = (props) => {\r\n    return (\r\n        <div className=\"flex-1 flex justify-center items-center\">\r\n            <Spin />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageLoading\r\n","import React, { Component } from 'react'\r\nimport { Switch, BrowserRouter as Router } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport loadable from '@loadable/component'\r\n\r\nimport withLayout from './../HOCS/withLayout'\r\nimport routes from './routes'\r\nimport PageLoading from './../components/PageLoadings/PageLoading'\r\n// import { HomePath, SignInPath } from '../constants/routerConstants'\r\n// import SignInLayout from '../components/Layouts/SignInLayout'\r\n\r\n// const LandingPage = loadable(() => import('../views/LandingPage'))\r\n// const SigninView = loadable(() => import('../views/SigninView'))\r\n\r\n// const AsyncPage = loadable((props) => import(`../views/${props.page}`))\r\n\r\nclass AppRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    {routes.map((route, index) => {\r\n                        return (\r\n                            <route.route\r\n                                key={`route-${route.name}`}\r\n                                path={route.path}\r\n                                exact={route.exact}\r\n                                component={withLayout((props) => {\r\n                                    const Component = loadable(\r\n                                        () => import(`../views/${route.name}`),\r\n                                        {\r\n                                            fallback: <PageLoading />,\r\n                                        }\r\n                                    )\r\n                                    return route?.layout ? (\r\n                                        <route.layout {...props}>\r\n                                            <Component\r\n                                                {...route?.componentProps}\r\n                                            />\r\n                                        </route.layout>\r\n                                    ) : (\r\n                                        <Component\r\n                                            {...props}\r\n                                            {...route?.componentProps}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            />\r\n                        )\r\n                    })}\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({}), null)(AppRouter)\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/reducers/globalActions'\r\nimport { lastLogginSelector } from './../store/reducers/auth/selectors'\r\n\r\nclass SessionManager extends Component {\r\n    componentDidMount() {\r\n        this.expiredSession()\r\n    }\r\n\r\n    expiredSession = () => {\r\n        const { lastLoggin, logout } = this.props\r\n        if (lastLoggin) {\r\n            const now = new Date()\r\n            const _lastLoggin = new Date(lastLoggin)\r\n            const hour24 = 24 * 60 * 60 * 1000\r\n\r\n            if (now.getTime() - _lastLoggin.getTime() >= hour24) {\r\n                logout()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lastLoggin: lastLogginSelector(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({ logout: () => dispatch(logout()) })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionManager)\r\n","import React from 'react'\r\nimport Router from '../Router'\r\nimport SessionManager from './SessionManager'\r\n\r\nimport '../styles/App.less'\r\n\r\nconst App = () => {\r\n    // const [isDarkMode, setIsDarkMode] = React.useState()\r\n    // const { switcher, currentTheme, status, themes } = useThemeSwitcher()\r\n\r\n    // const toggleTheme = (isChecked) => {\r\n    //     setIsDarkMode(isChecked)\r\n    //     switcher({ theme: isChecked ? themes.dark : themes.light })\r\n    // }\r\n\r\n    // Avoid theme change flicker\r\n    // const handleClick = () => {}\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <SessionManager />\r\n            <Router />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry)\r\n                getFID(onPerfEntry)\r\n                getFCP(onPerfEntry)\r\n                getLCP(onPerfEntry)\r\n                getTTFB(onPerfEntry)\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { combineReducers } from 'redux'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport globalTypes from './globalTypes'\r\nimport auth from './auth'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['auth'],\r\n}\r\n\r\nconst appReducer = combineReducers({\r\n    auth,\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === globalTypes.LOG_OUT) {\r\n        storage.removeItem('persist:root')\r\n        return appReducer(undefined, action)\r\n    }\r\n\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default persistReducer(persistConfig, rootReducer)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport App from './App'\r\n// import { ThemeSwitcherProvider } from 'react-css-theme-switcher'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport configureStore from './store/config/index'\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store.store}>\r\n            <PersistGate loading={null} persistor={store.persistor}>\r\n                <App />\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","import { applyMiddleware, createStore, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { persistStore } from 'redux-persist'\r\n\r\nimport rootReducers from '../reducers'\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [thunkMiddleware]\r\n\r\n    const composeEnhancers =\r\n        (typeof window !== 'undefined' &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n        compose\r\n    // const persistedState\r\n\r\n    const store = createStore(\r\n        rootReducers,\r\n        composeEnhancers(applyMiddleware(...middlewares))\r\n    )\r\n\r\n    const persistor = persistStore(store)\r\n\r\n    return { store, persistor }\r\n}\r\n\r\nexport default configureStore\r\n","import { createSelector } from 'reselect'\r\n\r\nexport const authReducerSelector = createSelector(\r\n    (state) => state.auth,\r\n    (authReducer) => authReducer\r\n)\r\n\r\nexport const authenticatedSelector = createSelector(\r\n    authReducerSelector,\r\n    (authReducer) => authReducer.auth\r\n)\r\n\r\nexport const lastLogginSelector = createSelector(\r\n    authReducerSelector,\r\n    (authReducer) => authReducer.lastLoggin\r\n)\r\n\r\nexport const userDataSelector = createSelector(\r\n    authReducerSelector,\r\n    (authReducer) => authReducer.userData\r\n)\r\n","export const LOG_OUT = 'logout'\r\nexport const USER_AUTH = 'auth/setData'\r\nexport const SIGN_UP = 'auth/signup'\r\nexport const SIGN_IN = 'auth/signin'\r\nexport const SENDUSER_DATA = 'signup/sendUserData'\r\n","import axios from 'axios'\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL:\r\n        process.env.NODE_ENV === 'production'\r\n            ? 'http://localhost:3000/'\r\n            : 'http://localhost:3000/',\r\n})\r\n\r\naxiosInstance.interceptors.response.use(\r\n    (response) =>\r\n        new Promise((resolve, reject) => {\r\n            resolve(response)\r\n        }),\r\n    (error) => {\r\n        if (!error.response) {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error)\r\n            })\r\n        }\r\n        if (error.response.status === 403) {\r\n            // window.location = '/logout'\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error)\r\n            })\r\n        }\r\n    }\r\n)\r\nexport default axiosInstance\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport * as types from './types'\r\nimport axiosInstance from './../../services/axiosConfig'\r\n\r\n// export const sendUserData = createAsyncThunk(\r\n//     types.SENDUSER_DATA,\r\n//     async (user, { dispatch }) => {\r\n//         const id = 0\r\n\r\n//         const generator = UUID(id)\r\n//         const uuid = generator.uuid()\r\n//         const result = axiosInstance.post('user/send/data', {\r\n//             userId: uuid,\r\n//             firstName: user?.firstName ? user?.firstName : '',\r\n//             lastName: user?.lastName ? user?.lastName : '',\r\n//             email: user.email,\r\n//         })\r\n//         return result\r\n//     }\r\n// )\r\n\r\nexport const signIn = createAsyncThunk(\r\n    types.SIGN_IN,\r\n    async (user, { rejectWithValue }) => {\r\n        try {\r\n            const response = await axiosInstance.post('auth/signin', {\r\n                email: user.email,\r\n                password: user.password,\r\n            })\r\n\r\n            return response.data\r\n        } catch (error) {\r\n            if (!error.response) {\r\n                throw error\r\n            }\r\n\r\n            console.log({ error })\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n\r\nexport const signUp = createAsyncThunk(\r\n    types.SIGN_UP,\r\n    async (user, { rejectWithValue }) => {\r\n        try {\r\n            const result = await axiosInstance.post('auth/signup', {\r\n                firstName: user?.firstName ?? '',\r\n                lastName: user?.lastName ?? '',\r\n                email: user.email,\r\n                username: user.username,\r\n                password: user.password,\r\n            })\r\n\r\n            return result.data\r\n        } catch (error) {\r\n            if (!error.response) {\r\n                throw error\r\n            }\r\n            console.log({ error })\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n","export const RootPath = process.env.NODE_ENV === 'production' ? '' : ''\r\n\r\nexport const HomePath = `${RootPath}/`\r\nexport const LoginInPath = `${RootPath}/login`\r\nexport const SignInPath = `${RootPath}/signup`\r\nexport const LogOutPath = `${RootPath}/logout`\r\nexport const TravelPath = `${RootPath}/travel`\r\n\r\nexport const tripvixiaURL =\r\n    'https://members.tripvixia.com/membership/signup?invite=0e3cb515-2949-4e1a-bb83-fd7fe4a5b251&referraltype=3'\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { signIn } from './actions'\r\n\r\nconst initialState = {\r\n    auth: false,\r\n    accessToken: null,\r\n    userData: {\r\n        id: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        verified: '',\r\n    },\r\n    lastLoggin: null,\r\n}\r\n\r\nconst authReducer = createReducer(initialState, (builder) => {\r\n    builder.addCase(\r\n        signIn.fulfilled,\r\n        (state, { payload: { accessToken, user } }) => ({\r\n            ...state,\r\n            auth: true,\r\n            accessToken: accessToken,\r\n            userData: user,\r\n            lastLoggin: new Date(),\r\n        })\r\n    )\r\n})\r\n\r\nexport default authReducer\r\n","import authReducer from './authReducer'\r\nimport * as actions from './actions'\r\nimport * as types from './types'\r\nimport * as selectors from './selectors'\r\n\r\nexport const actionsAuth = actions\r\nexport const typesAuth = types\r\nexport const selectorsAuth = selectors\r\nexport default authReducer\r\n"],"sourceRoot":""}