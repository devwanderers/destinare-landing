{"version":3,"sources":["views/AuthView/Forms/Login.js","constants/countrys.js","constants/language.js","views/AuthView/Forms/SignUp.js","services/yupValidations.js","components/CreateAntField/index.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","services/promises.js","container/Auth/LoginContainer.js","container/Auth/SignUpContainer.js","views/AuthView/index.js"],"names":["schema","Yup","emailOrUsername","validations","generic","password","initialValues","Login","onSubmit","showError","errorMessage","history","useHistory","Fragment","className","validationSchema","isSubmitting","values","component","AntInput","name","type","placeholder","hasFeedback","value","AntInputPassword","iconRender","visible","message","showIcon","Item","block","htmlType","loading","style","paddingTop","paddingBottom","top","href","onClick","e","preventDefault","push","SignInPath","countrys","availableLangues","firstName","lastName","email","mail","country","language","confirmPassword","passwordConfirmation","userName","SigUp","AntSelect","showSearch","selectOptions","EyeTwoTone","EyeInvisibleOutlined","LoginInPath","SUPPORTED_FORMATS","regex","min","max","matches","required","oneOf","test","validator","isAlphanumeric","walletAddress","isEthereumAddress","lowercase","phone","isAlpha","replace","birthDate","state","city","line","postalCode","file","size","includes","min20Usd","_v","parseFloat","no0Usd","boolean","onlyNumber","isColor","s","Option","color","number","array","validateIsNotCurrentUser","currentUser","currentMembers","userMail","valid","index","length","FormItem","Form","Select","CreateAntField","AntComponent","field","form","label","defaultSelected","submitCount","props","touched","submitted","hasError","errors","submittedError","touchedError","help","validateStatus","onBlur","setFieldTouched","onChange","target","setFieldValue","map","DatePicker","Input","Password","TimePicker","Row","Col","timeout","ms","Promise","resolve","setTimeout","sleep","fn","a","delay","connect","dispatch","signIn","userData","actionsAuth","sendMail","restProps","useState","setShowError","setErrorMessage","handleSetError","setSubmitting","then","resSignIn","error","payload","user","mailSent","signUp","rest","SignUp","restValues","resSignUp","console","log","AuthView","FormAuth","auth","LoginContainer","SignUpContainer","flex","sm","HomePath","width","height"],"mappings":"6GAAA,mIAaMA,EAASC,IAAW,CACtBC,gBAAiBC,IAAYC,QAC7BC,SAAUF,IAAYC,UAGpBE,EAAgB,CAClBJ,gBAAiB,GACjBG,SAAU,IAoGCE,UAjGD,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC5BC,EAAUC,cAEhB,OACI,eAAC,IAAMC,SAAP,WACI,qBAAKC,UAAU,mBAAf,oBACA,cAAC,IAAD,CACIC,iBAAkBf,EAClBM,cAAeA,EACfE,SAAUA,EAHd,SAKK,gBAAGQ,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAjB,OACG,eAAC,IAAD,CAAMH,UAAU,OAAhB,UACI,cAAC,IAAD,CACII,UAAWC,IACXC,KAAK,kBACLC,KAAK,QACLC,YAAY,QACZR,UAAU,kBACVS,aAAW,EACXC,MAAK,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAQf,kBAEnB,cAAC,IAAD,CACIgB,UAAWO,IACXL,KAAK,WACLC,KAAK,WACLC,YAAY,WACZR,UAAU,kBACVS,aAAW,EACXG,WAAY,SAACC,GAAD,OACRA,EACI,cAAC,IAAD,IAEA,cAAC,IAAD,KAGRH,MAAK,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAQZ,WAElBI,GACG,cAAC,IAAD,CACIK,UAAU,OACVc,QAASlB,EACTW,KAAK,QACLQ,UAAQ,IAGhB,cAAC,IAAQC,KAAT,CAAchB,UAAU,OAAxB,SACI,cAAC,IAAD,CACIiB,OAAK,EACLV,KAAK,UACLW,SAAS,SACTlB,UAAU,qDAEVmB,QAASjB,EACTkB,MAAO,CACHC,WAAY,MACZC,cAAe,OATvB,qBAeJ,sBAAKtB,UAAU,wCAAf,UACI,mBACIO,KAAK,OACLP,UAAU,mDAFd,8BAMA,uBACIA,UAAU,4CACVoB,MAAO,CAAEG,IAAK,QAFlB,UAIK,0BACD,mBACIvB,UAAU,4CACVwB,KAAK,IACLC,QAAS,SAACC,GACNA,EAAEC,iBAEF9B,EAAQ+B,KAAKC,MANrB,kCAgBlBlC,GAAa,qBAAKK,UAAU,qB,oJCjH7B8B,EAAW,CACpB,cACA,gBACA,UACA,UACA,iBACA,UACA,SACA,WACA,aACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,UACA,yBACA,WACA,gBACA,SACA,iCACA,oBACA,WACA,eACA,UACA,WACA,WACA,SACA,aACA,iBACA,2BACA,OACA,QACA,QACA,mBACA,0BACA,WACA,UACA,QACA,eACA,aACA,qBACA,UACA,SACA,iBACA,mCACA,UACA,WACA,WACA,qBACA,aACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,8BACA,gBACA,iCACA,OACA,UACA,SACA,gBACA,mBACA,8BACA,QACA,SACA,UACA,UACA,QACA,YACA,qBACA,SACA,YACA,UACA,aACA,OACA,YACA,SACA,gBACA,SACA,QACA,oCACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,UACA,SACA,QACA,cACA,UACA,QACA,SACA,aACA,QACA,WACA,gBACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,aACA,YACA,UACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,cACA,uBACA,gBACA,cACA,YACA,QACA,UACA,OACA,iBACA,2BACA,SACA,OACA,WACA,QACA,wBACA,SACA,mBACA,WACA,OACA,cACA,WACA,SACA,WACA,cACA,QACA,UACA,UACA,qBACA,SACA,qCACA,mBACA,eACA,wBACA,cACA,4BACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,eACA,WACA,WACA,kBACA,UACA,eACA,QACA,YACA,WACA,yBACA,YACA,SACA,cACA,SACA,aACA,WACA,WACA,cACA,OACA,UACA,QACA,sBACA,UACA,SACA,eACA,2BACA,SACA,SACA,uBACA,iBACA,gBACA,uCACA,UACA,gBACA,aACA,UACA,gCACA,YAC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","file":"static/js/7.c57f8fc0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { Button, Form as FormAnt, Alert } from 'antd'\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons'\r\nimport * as Yup from 'yup'\r\nimport { useHistory } from 'react-router'\r\nimport { validations } from './../../../services/yupValidations'\r\nimport {\r\n    AntInput,\r\n    AntInputPassword,\r\n} from './../../../components/CreateAntField/index'\r\nimport { SignInPath } from '../../../constants/routerConstants'\r\n\r\nconst schema = Yup.object({\r\n    emailOrUsername: validations.generic,\r\n    password: validations.generic,\r\n})\r\n\r\nconst initialValues = {\r\n    emailOrUsername: '',\r\n    password: '',\r\n}\r\n\r\nconst Login = ({ onSubmit, showError, errorMessage }) => {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"font-medium mb-2\">Log in</div>\r\n            <Formik\r\n                validationSchema={schema}\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {({ isSubmitting, values }) => (\r\n                    <Form className=\"mb-4\">\r\n                        <Field\r\n                            component={AntInput}\r\n                            name=\"emailOrUsername\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            className=\"h-12 rounded-lg\"\r\n                            hasFeedback\r\n                            value={values?.emailOrUsername}\r\n                        />\r\n                        <Field\r\n                            component={AntInputPassword}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            className=\"h-12 rounded-lg\"\r\n                            hasFeedback\r\n                            iconRender={(visible) =>\r\n                                visible ? (\r\n                                    <EyeTwoTone />\r\n                                ) : (\r\n                                    <EyeInvisibleOutlined />\r\n                                )\r\n                            }\r\n                            value={values?.password}\r\n                        />\r\n                        {showError && (\r\n                            <Alert\r\n                                className=\"mb-5\"\r\n                                message={errorMessage}\r\n                                type=\"error\"\r\n                                showIcon\r\n                            />\r\n                        )}\r\n                        <FormAnt.Item className=\"mb-0\">\r\n                            <Button\r\n                                block\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"text-sm px-4 py-2 py h-12 rounded-full font-medium\"\r\n                                // disabled={isSubmitting}\r\n                                loading={isSubmitting}\r\n                                style={{\r\n                                    paddingTop: '9px',\r\n                                    paddingBottom: '9px',\r\n                                }}\r\n                            >\r\n                                LOGIN\r\n                            </Button>\r\n                        </FormAnt.Item>\r\n                        <div className=\"login-links flex flex-col text-center\">\r\n                            <a\r\n                                type=\"link\"\r\n                                className=\"text-sm h-auto py-0 text-black-1 hover:text-info\"\r\n                            >\r\n                                Forgot password?\r\n                            </a>\r\n                            <span\r\n                                className=\"text-black-1 text-sm h-auto py-0 relative\"\r\n                                style={{ top: '-7px' }}\r\n                            >\r\n                                {\"Don't have an account? \"}\r\n                                <a\r\n                                    className=\"font-medium text-blue-900 hover:text-info\"\r\n                                    href=\"#\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault()\r\n\r\n                                        history.push(SignInPath)\r\n                                    }}\r\n                                >\r\n                                    Sign up\r\n                                </a>\r\n                            </span>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            {!showError && <div className=\"h-40px mb-5\"></div>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {}\r\n\r\nexport default Login\r\n","export const countrys = [\n    'Afghanistan',\n    'Aland Islands',\n    'Albania',\n    'Algeria',\n    'American Samoa',\n    'Andorra',\n    'Angola',\n    'Anguilla',\n    'Antarctica',\n    'Antigua and Barbuda',\n    'Argentina',\n    'Armenia',\n    'Aruba',\n    'Australia',\n    'Austria',\n    'Azerbaijan',\n    'Bahamas',\n    'Bahrain',\n    'Bangladesh',\n    'Barbados',\n    'Belarus',\n    'Belgium',\n    'Belize',\n    'Benin',\n    'Bermuda',\n    'Bhutan',\n    'Bolivia',\n    'Bonaire',\n    'Bosnia and Herzegovina',\n    'Botswana',\n    'Bouvet Island',\n    'Brazil',\n    'British Indian Ocean Territory',\n    'Brunei Darussalam',\n    'Bulgaria',\n    'Burkina Faso',\n    'Burundi',\n    'Cambodia',\n    'Cameroon',\n    'Canada',\n    'Cape Verde',\n    'Cayman Islands',\n    'Central African Republic',\n    'Chad',\n    'Chile',\n    'China',\n    'Christmas Island',\n    'Cocos (Keeling) Islands',\n    'Colombia',\n    'Comoros',\n    'Congo',\n    'Cook Islands',\n    'Costa Rica',\n    'Croatia (Hrvatska)',\n    'Curacao',\n    'Cyprus',\n    'Czech Republic',\n    'Democratic Republic of the Congo',\n    'Denmark',\n    'Djibouti',\n    'Dominica',\n    'Dominican Republic',\n    'East Timor',\n    'Ecuador',\n    'Egypt',\n    'El Salvador',\n    'Equatorial Guinea',\n    'Eritrea',\n    'Estonia',\n    'Ethiopia',\n    'Falkland Islands (Malvinas)',\n    'Faroe Islands',\n    'Federated States of Micronesia',\n    'Fiji',\n    'Finland',\n    'France',\n    'French Guiana',\n    'French Polynesia',\n    'French Southern Territories',\n    'Gabon',\n    'Gambia',\n    'Georgia',\n    'Germany',\n    'Ghana',\n    'Gibraltar',\n    'Great Britain (UK)',\n    'Greece',\n    'Greenland',\n    'Grenada',\n    'Guadeloupe',\n    'Guam',\n    'Guatemala',\n    'Guinea',\n    'Guinea-Bissau',\n    'Guyana',\n    'Haiti',\n    'Heard Island and McDonald Islands',\n    'Honduras',\n    'Hong Kong',\n    'Hungary',\n    'Iceland',\n    'India',\n    'Indonesia',\n    'Iraq',\n    'Ireland',\n    'Israel',\n    'Italy',\n    'Ivory Coast',\n    'Jamaica',\n    'Japan',\n    'Jordan',\n    'Kazakhstan',\n    'Kenya',\n    'Kiribati',\n    'Korea (South)',\n    'Kuwait',\n    'Kyrgyzstan',\n    'Laos',\n    'Latvia',\n    'Lebanon',\n    'Lesotho',\n    'Liberia',\n    'Libya',\n    'Liechtenstein',\n    'Lithuania',\n    'Luxembourg',\n    'Macau',\n    'Macedonia',\n    'Madagascar',\n    'Malawi',\n    'Malaysia',\n    'Maldives',\n    'Mali',\n    'Malta',\n    'Marshall Islands',\n    'Martinique',\n    'Mauritania',\n    'Mauritius',\n    'Mayotte',\n    'Mexico',\n    'Moldova',\n    'Monaco',\n    'Mongolia',\n    'Montenegro',\n    'Montserrat',\n    'Morocco',\n    'Mozambique',\n    'Myanmar',\n    'Namibia',\n    'Nauru',\n    'Nepal',\n    'Netherlands',\n    'Netherlands Antilles',\n    'New Caledonia',\n    'New Zealand',\n    'Nicaragua',\n    'Niger',\n    'Nigeria',\n    'Niue',\n    'Norfolk Island',\n    'Northern Mariana Islands',\n    'Norway',\n    'Oman',\n    'Pakistan',\n    'Palau',\n    'Palestinian Territory',\n    'Panama',\n    'Papua New Guinea',\n    'Paraguay',\n    'Peru',\n    'Philippines',\n    'Pitcairn',\n    'Poland',\n    'Portugal',\n    'Puerto Rico',\n    'Qatar',\n    'Reunion',\n    'Romania',\n    'Russian Federation',\n    'Rwanda',\n    'S. Georgia and S. Sandwich Islands',\n    'Saint Barthelemy',\n    'Saint Helena',\n    'Saint Kitts and Nevis',\n    'Saint Lucia',\n    'Saint Pierre and Miquelon',\n    'Saint Vincent and the Grenadines',\n    'Samoa',\n    'San Marino',\n    'Sao Tome and Principe',\n    'Saudi Arabia',\n    'Senegal',\n    'Serbia',\n    'Seychelles',\n    'Sierra Leone',\n    'Singapore',\n    'Sint Maarten',\n    'Slovakia',\n    'Slovenia',\n    'Solomon Islands',\n    'Somalia',\n    'South Africa',\n    'Spain',\n    'Sri Lanka',\n    'Suriname',\n    'Svalbard and Jan Mayen',\n    'Swaziland',\n    'Sweden',\n    'Switzerland',\n    'Taiwan',\n    'Tajikistan',\n    'Tanzania',\n    'Thailand',\n    'Timor-Leste',\n    'Togo',\n    'Tokelau',\n    'Tonga',\n    'Trinidad and Tobago',\n    'Tunisia',\n    'Turkey',\n    'Turkmenistan',\n    'Turks and Caicos Islands',\n    'Tuvalu',\n    'Uganda',\n    'United Arab Emirates',\n    'United Kingdom',\n    'United States',\n    'United States Minor Outlying Islands',\n    'Uruguay',\n    'USSR (former)',\n    'Uzbekistan',\n    'Vanuatu',\n    'Vatican City State (Holy See)',\n    'Venezuela',\n    'Vietnam',\n    'Virgin Islands (British)',\n    'Virgin Islands (U.S.)',\n    'Wallis and Futuna',\n    'Western Sahara',\n    'Yemen',\n    'Yugoslavia (former)',\n    'Zaire (former)',\n    'Zambia',\n    'Zimbabwe',\n]\n","export const availableLangues = [\n    'English',\n    'Spanish',\n    'French',\n    'Portugu',\n    'Italian',\n    'Mandarin',\n]\n","import React from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { Button, Form as FormAnt, Alert } from 'antd'\nimport * as Yup from 'yup'\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons'\nimport { validations } from '../../../services/yupValidations'\nimport { useHistory } from 'react-router'\n\nimport { LoginInPath } from '../../../constants/routerConstants'\nimport { countrys } from './../../../constants/countrys'\nimport { availableLangues } from './../../../constants/language'\nimport {\n    AntInput,\n    AntInputPassword,\n    AntSelect,\n} from '../../../components/CreateAntField/index'\n\nconst schema = Yup.object({\n    firstName: validations.name,\n    lastName: validations.name,\n    email: validations.mail,\n    country: validations.generic,\n    language: validations.generic,\n    // userName: validations.userName,\n    // walletAddress: validations.walletAddress,\n    password: validations.password,\n    confirmPassword: validations.passwordConfirmation,\n})\n\nconst initialValues = {\n    firstName: '',\n    lastName: '',\n    userName: '',\n    email: '',\n    // country: null,\n    password: '',\n    confirmPassword: '',\n}\n\nconst SigUp = ({ onSubmit, showError, errorMessage }) => {\n    const history = useHistory()\n\n    return (\n        <React.Fragment>\n            <div className=\"font-medium mb-2\">Sign up</div>\n            <Formik\n                validationSchema={schema}\n                initialValues={initialValues}\n                onSubmit={onSubmit}\n            >\n                {({ values, isSubmitting }) => (\n                    <Form className=\"mb-4\">\n                        <div className=\"flex flex-row space-x-2\">\n                            <Field\n                                component={AntInput}\n                                type=\"text\"\n                                name=\"firstName\"\n                                placeholder=\"* First Name\"\n                                className=\"h-12 rounded-lg\"\n                                hasFeedback\n                                value={values?.firstName}\n                            />\n                            <Field\n                                component={AntInput}\n                                type=\"text\"\n                                name=\"lastName\"\n                                placeholder=\"* Last Name\"\n                                className=\"h-12 rounded-lg\"\n                                hasFeedback\n                                value={values?.lastName}\n                            />\n                        </div>\n                        <Field\n                            component={AntInput}\n                            name=\"email\"\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            value={values?.email}\n                        />\n                        <Field\n                            component={AntSelect}\n                            name=\"country\"\n                            showSearch\n                            // type=\"email\"\n                            placeholder=\"Country of Residence\"\n                            className=\"h-12 rounded-lg custom-ant-select\"\n                            selectOptions={countrys}\n                            // hasFeedback\n                            value={values?.country}\n                        />\n                        <Field\n                            component={AntSelect}\n                            name=\"language\"\n                            showSearch\n                            // type=\"email\"\n                            placeholder=\"Preferred Language\"\n                            className=\"h-12 rounded-lg custom-ant-select\"\n                            selectOptions={availableLangues}\n                            // hasFeedback\n                            value={values?.language}\n                        />\n                        {/* <Field\n                            component={AntInput}\n                            type=\"text\"\n                            name=\"userName\"\n                            placeholder=\"Username\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            value={values?.userName}\n                        />\n                        <Field\n                            component={AntInput}\n                            type=\"text\"\n                            name=\"walletAddress\"\n                            placeholder=\"Wallet Address\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            value={values?.walletAddress}\n                        /> */}\n                        <Field\n                            component={AntInputPassword}\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            iconRender={(visible) =>\n                                visible ? (\n                                    <EyeTwoTone />\n                                ) : (\n                                    <EyeInvisibleOutlined />\n                                )\n                            }\n                            value={values?.password}\n                        />\n                        <Field\n                            component={AntInputPassword}\n                            name=\"confirmPassword\"\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            className=\"h-12 rounded-lg\"\n                            hasFeedback\n                            iconRender={(visible) =>\n                                visible ? (\n                                    <EyeTwoTone />\n                                ) : (\n                                    <EyeInvisibleOutlined />\n                                )\n                            }\n                            value={values?.confirmPassword}\n                        />\n                        {showError && (\n                            <Alert\n                                className=\"mb-5\"\n                                message={errorMessage}\n                                type=\"error\"\n                                showIcon\n                            />\n                        )}\n\n                        <FormAnt.Item className=\"mb-0\">\n                            <Button\n                                type=\"primary\"\n                                block\n                                className=\"text-sm px-4 py-2 py h-12 rounded-full font-medium\"\n                                htmlType=\"submit\"\n                                loading={isSubmitting}\n                                style={{\n                                    paddingTop: '9px',\n                                    paddingBottom: '9px',\n                                }}\n                            >\n                                Register\n                            </Button>\n                        </FormAnt.Item>\n                    </Form>\n                )}\n            </Formik>\n\n            <div className=\"login-links text-center\">\n                <span\n                    className=\"text-black-1 text-sm h-auto py-0 relative\"\n                    style={{ top: '-7px' }}\n                >\n                    Already have an account.\n                    <a\n                        className=\"font-medium text-blue-200 hover:text-info\"\n                        href=\"#\"\n                        onClick={(e) => {\n                            e.preventDefault()\n\n                            history.push(LoginInPath)\n                        }}\n                    >\n                        {' '}\n                        Log in\n                    </a>\n                </span>\n            </div>\n            {!showError && <div className=\"h-40px mb-5\"></div>}\n        </React.Fragment>\n    )\n}\n\nSigUp.propTypes = {}\n\nexport default SigUp\n","import * as Yup from 'yup'\nimport validator from 'validator'\n\nexport const SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\n\nconst FILE_SIZE = 100 * 1024\n\nexport const regex = {\n    alpha: /^[A-Za-z]+$/,\n    alphaNumeric: /[a-zA-Z0-9]/,\n    atLeastOneUpperCase: /[A-Z]/,\n    phoneNumber:\n        /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\n    exact5: /^[0-9]{5}$/,\n}\n\nexport const validations = {\n    password: Yup.string()\n        .min(8, 'Too Short!')\n        .max(64, 'Too Long!')\n        .matches(\n            regex.atLeastOneUpperCase,\n            'Must contain al least one uppercase letter.'\n        )\n        .required('Required'),\n    passwordConfirmation: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Required'),\n    userName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(64, 'Too Long!')\n        .test(\n            'alphaNumeric',\n            'Must contain only letters and numbers.',\n            (value) => value && validator.isAlphanumeric(value)\n        )\n        .required('Required'),\n    walletAddress: Yup.string()\n        .min(3, 'Too Short!')\n        .max(64, 'Too Long!')\n        .test(\n            'alphaNumeric',\n            'Must be a valid wallet address.',\n            (value) => value && validator.isEthereumAddress(value)\n        )\n        .required('Required'),\n    mail: Yup.string()\n        .max(64, 'Too Long!')\n        .email('Must be a valid email format. example@email.com')\n        .lowercase('Must contain only lower case')\n        .required('Required'),\n    phone: Yup.string()\n        .matches(regex.phoneNumber, 'Must be a valid phone number.')\n        .required('Required'),\n    name: Yup.string()\n        .min(3, 'Too Short!')\n        .max(30, 'Too Long!')\n        .test(\n            'alpha',\n            'Must contain only letters.',\n            (value) =>\n                !value || (value && validator.isAlpha(value.replace(' ', '')))\n        ),\n    // .required('Required'),\n    birthDate: Yup.date().required('Required'),\n    country: Yup.string().required('Required'),\n    state: Yup.string().required('Required'),\n    city: Yup.string().required('Required'),\n    line: Yup.string().required('Required'),\n    postalCode: Yup.string()\n        .matches(regex.exact5, 'Must be exactly 5 digits')\n        .required('Required'),\n    file: Yup.mixed()\n        .required('A file is required')\n        .test(\n            'fileSize',\n            'File too large',\n            (value) => value && value[0].size <= FILE_SIZE\n        )\n        .test(\n            'fileFormat',\n            'Unsupported Format',\n            (value) => value && SUPPORTED_FORMATS.includes(value[0].type)\n        )\n        .required('Required'),\n    min20Usd: Yup.mixed()\n        .required('Required')\n        .test('usdAmount', 'Minimum to invest is 20 USD', (value) => {\n            if (value) {\n                let _v = value\n                _v = _v.replace(/\\D/g, '')\n                _v = parseFloat(_v)\n                return _v >= 20.0\n            }\n            return false\n        }),\n    no0Usd: Yup.mixed()\n        .required('Required')\n        .test('usdAmount', 'Usd amount must be higher than 0', (value) => {\n            if (value) {\n                let _v = value\n                _v = parseFloat(_v)\n                return _v > 0.0\n            }\n            return false\n        }),\n    generic: Yup.string().max(64, 'Too Long!').required('Required'),\n    boolean: Yup.bool().oneOf([true], 'Field must be checked'),\n    onlyNumber: Yup.mixed()\n        .required('Required')\n        .test('onlyNumber', 'Field must be a number', (value) => {\n            if (value) {\n                const _v = value\n                const isnum = /^\\d+$/.test(_v)\n\n                return isnum\n            }\n            return false\n        }),\n    isColor: Yup.mixed()\n        .required('Required')\n        .test(\n            'color',\n            'Field must be a valid color format. Examples. RGBA: rgba(0, 0, 0, 1), HEXA: #000000, RGB: rgb(0,0,0), Color: red',\n            (value) => {\n                if (value) {\n                    const s = new Option().style\n                    s.color = value\n                    return s.color !== ''\n                }\n                return false\n            }\n        ),\n    number: Yup.number().required('Required'),\n    array: Yup.array().required('Required'),\n    validateIsNotCurrentUser: (currentUser, currentMembers) => {\n        return Yup.mixed()\n            .required('Required')\n            .test('validUserName', 'You can not add yourself', (value) => {\n                if (value) {\n                    if (\n                        value === currentUser.userName ||\n                        value === currentUser.userMail\n                    )\n                        return false\n                    return true\n                }\n                return false\n            })\n            .test(\n                'validateIsNotExistingMember',\n                'You can not add existing members',\n                (value) => {\n                    if (value) {\n                        let valid = true\n\n                        for (\n                            let index = 0;\n                            index < currentMembers.length;\n                            index++\n                        ) {\n                            const { userName, userMail } = currentMembers[index]\n                            if (value === userName || value === userMail) {\n                                valid = false\n                                break\n                            }\n                        }\n                        return valid\n                    }\n                    return false\n                }\n            )\n    },\n}\n","/* eslint-disable react/display-name */\nimport React from 'react'\nimport { DatePicker, Form, Input, TimePicker, Select } from 'antd'\n\nconst FormItem = Form.Item\nconst { Option } = Select\n\nconst CreateAntField =\n    (AntComponent) =>\n    ({\n        field,\n        form,\n        hasFeedback,\n        label,\n        defaultSelected,\n        selectOptions,\n        submitCount,\n        type,\n        ...props\n    }) => {\n        const touched = form.touched[field.name]\n        const submitted = submitCount > 0\n        const hasError = form.errors[field.name]\n        const submittedError = hasError && submitted\n        const touchedError = hasError && touched\n        const onInputChange = ({ target: { value } }) =>\n            form.setFieldValue(field.name, value)\n        const onChange = (value) => form.setFieldValue(field.name, value)\n        const onBlur = () => form.setFieldTouched(field.name, true)\n\n        return (\n            <FormItem\n                label={label}\n                hasFeedback={\n                    (hasFeedback && submitted) || (hasFeedback && touched)\n                }\n                help={submittedError || touchedError ? hasError : false}\n                validateStatus={\n                    submittedError || touchedError ? 'error' : 'success'\n                }\n            >\n                <AntComponent\n                    {...field}\n                    {...props}\n                    onBlur={onBlur}\n                    onChange={type ? onInputChange : onChange}\n                >\n                    {selectOptions &&\n                        selectOptions.map((name) => (\n                            <Option key={name}>{name}</Option>\n                        ))}\n                </AntComponent>\n            </FormItem>\n        )\n    }\n\nexport const AntSelect = CreateAntField(Select)\nexport const AntDatePicker = CreateAntField(DatePicker)\nexport const AntInput = CreateAntField(Input)\nexport const AntInputPassword = CreateAntField(Input.Password)\nexport const AntTimePicker = CreateAntField(TimePicker)\n","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","const returnPromise = (callback) => {\r\n    return new Promise((resolve, reject) => callback(resolve, reject))\r\n}\r\n\r\nconst timeout = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nconst sleep = async (fn, delay = 300) => {\r\n    await timeout(delay)\r\n    return fn()\r\n}\r\n\r\nexport { returnPromise, timeout, sleep }\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { sleep } from '../../services/promises'\r\nimport * as actionsAuth from '../../store/reducers/auth/actions'\r\nimport Login from '../../views/AuthView/Forms/Login'\r\n// import { tripvixiaURL } from './../../constants/s\r\n\r\nconst LoginContainer = ({ signIn, sendMail, ...restProps }) => {\r\n    const [showError, setShowError] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const handleSetError = (errorMessage) => {\r\n        setShowError(true)\r\n        setErrorMessage(errorMessage)\r\n    }\r\n    const handleSubmitForm = (\r\n        { emailOrUsername, password },\r\n        { setSubmitting }\r\n    ) => {\r\n        setShowError(false)\r\n        signIn({ email: emailOrUsername, password }).then((resSignIn) => {\r\n            if (resSignIn?.error) {\r\n                if (resSignIn.payload?.message === 'InvalidCredentials') {\r\n                    handleSetError(\r\n                        'There was a problem logging in. Please check your email and password'\r\n                    )\r\n                } else if (resSignIn.payload?.message) {\r\n                    handleSetError(resSignIn.payload?.message)\r\n                } else {\r\n                    handleSetError('Internar server error')\r\n                }\r\n                sleep(() => {\r\n                    setSubmitting(false)\r\n                })\r\n            } else {\r\n                const { user } = resSignIn.payload\r\n                if (!user?.mailSent) {\r\n                    sendMail(emailOrUsername)\r\n                }\r\n            }\r\n            // else {\r\n            //     windowOpen(tripvixiaURL)\r\n            //     sleep(() => {\r\n            //         setSubmitting(false)\r\n            //     })\r\n            // }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Login\r\n            showError={showError}\r\n            errorMessage={errorMessage}\r\n            onSubmit={handleSubmitForm}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signIn: (userData) => dispatch(actionsAuth.signIn(userData)),\r\n    sendMail: (mail) => dispatch(actionsAuth.sendMail(mail)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)\r\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { sleep } from '../../services/promises'\nimport SignUp from '../../views/AuthView/Forms/SignUp'\nimport { actionsAuth } from './../../store/reducers/auth/index'\n\nconst SignUpContainer = ({ signUp, signIn, sendMail, ...rest }) => {\n    const [showError, setShowError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleSetError = (errorMessage) => {\n        setShowError(true)\n        setErrorMessage(errorMessage)\n    }\n\n    const handleSubmitForm = (\n        { confirmPassword, ...restValues },\n        { setSubmitting }\n    ) => {\n        setShowError(false)\n        signUp(restValues).then((resSignUp) => {\n            if (resSignUp?.error) {\n                handleSetError(resSignUp.payload?.message)\n                sleep(() => {\n                    setSubmitting(false)\n                })\n            } else {\n                const { email, password } = restValues\n                signIn({ email, password }).then((resSignIn) => {\n                    if (resSignIn?.error) {\n                        handleSetError(resSignIn.payload?.message)\n                    } else {\n                        const { user } = resSignIn.payload\n                        console.log({ user })\n                        if (!user?.mailSent) {\n                            sendMail(email)\n                        }\n                    }\n                })\n            }\n        })\n    }\n    return (\n        <SignUp\n            showError={showError}\n            errorMessage={errorMessage}\n            onSubmit={handleSubmitForm}\n            {...rest}\n        />\n    )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = (dispatch) => ({\n    signUp: (userData) => dispatch(actionsAuth.signUp(userData)),\n    signIn: (userData) => dispatch(actionsAuth.signIn(userData)),\n    sendMail: (mail) => dispatch(actionsAuth.sendMail(mail)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpContainer)\n","import React from 'react'\nimport { Row, Col } from 'antd'\n\nimport { DestinareLogoColorSVG } from '../../assets/svg/brand/index'\n\nimport LoginContainer from './../../container/Auth/LoginContainer'\nimport SignUpContainer from './../../container/Auth/SignUpContainer'\nimport { useHistory } from 'react-router'\nimport { HomePath } from '../../constants/routerConstants'\n\nconst AuthView = ({ auth }) => {\n    const FormAuth = auth === 'login' ? LoginContainer : SignUpContainer\n    const history = useHistory()\n    return (\n        <section className=\"login-content\">\n            <div className=\"absolute left-0 bottom-0 top-0 right-0 md:right-2/4 bg-womanBeach bg-cover bg-center md:bg-right md:flex hidden\"></div>\n            <div className=\"max-w-1280px px-6 relative lg:wrapper mx-auto lg:pl-4 lg:pr-4\">\n                <Row className=\"justify-center \" style={{ flex: '1' }}>\n                    <Col sm={12} className=\" flex justify-center \">\n                        {/* <div className=\"col-inner\">\n                            {auth === 'login' ? (\n                                <h2 className=\"\">\n                                    Regístrate para apoyar a tus creadores\n                                    favoritos\n                                </h2>\n                            ) : (\n                                <h2 className=\"\">\n                                    Regístrate para apoyar a tus creadores\n                                    favoritos 2\n                                </h2>\n                            )}\n                        </div> */}\n                    </Col>\n                    <Col sm={12} className=\"flex  justify-center\">\n                        <div className=\"col-inner\">\n                            <h1 className=\"mb-2 flex justify-center \">\n                                <a\n                                    href=\"#\"\n                                    onClick={(e) => {\n                                        e.preventDefault()\n                                        history.push(HomePath)\n                                    }}\n                                >\n                                    <DestinareLogoColorSVG\n                                        width={245}\n                                        height={64}\n                                    />\n                                </a>\n                            </h1>\n                            <FormAuth />\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </section>\n    )\n}\n\nAuthView.propTypes = {}\n\nexport default AuthView\n"],"sourceRoot":""}